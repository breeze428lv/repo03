<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [..\OUTPUT\CPWS.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ..\OUTPUT\CPWS.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 4.1 [Build 481]: Last Updated: Thu Jun 23 16:20:36 2022
<BR><P>
<H3>Maximum Stack Usage =        712 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; ProcessMessage &rArr; NotifyWriteFlash &rArr; FactoryCheck &rArr; LoadAllSettingsInFlash &rArr; UseData &rArr; variables_update &rArr; load_company_name &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[2b]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2b]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[0]">update_comm_data0</a> from api_comm.o(.text) referenced 2 times from api_comm.o(.data)
 <LI><a href="#[1]">update_comm_data1</a> from api_comm.o(.text) referenced 2 times from api_comm.o(.data)
 <LI><a href="#[2]">update_comm_data2</a> from api_comm.o(.text) referenced 2 times from api_comm.o(.data)
 <LI><a href="#[3]">update_comm_data3</a> from api_comm.o(.text) referenced 2 times from api_comm.o(.data)
 <LI><a href="#[4]">update_comm_data4</a> from api_comm.o(.text) referenced 2 times from api_comm.o(.data)
 <LI><a href="#[5]">update_comm_data5</a> from api_comm.o(.text) referenced 2 times from api_comm.o(.data)
 <LI><a href="#[6]">update_comm_data6</a> from api_comm.o(.text) referenced 2 times from api_comm.o(.data)
 <LI><a href="#[7]">update_comm_data7</a> from api_comm.o(.text) referenced 2 times from api_comm.o(.data)
 <LI><a href="#[8]">update_comm_data8</a> from api_comm.o(.text) referenced 2 times from api_comm.o(.data)
 <LI><a href="#[9]">update_comm_data9</a> from api_comm.o(.text) referenced 2 times from api_comm.o(.data)
 <LI><a href="#[a]">update_comm_data10</a> from api_comm.o(.text) referenced 2 times from api_comm.o(.data)
 <LI><a href="#[b]">update_comm_data11</a> from api_comm.o(.text) referenced 2 times from api_comm.o(.data)
 <LI><a href="#[c]">update_comm_data12</a> from api_comm.o(.text) referenced 2 times from api_comm.o(.data)
 <LI><a href="#[d]">update_comm_data13</a> from api_comm.o(.text) referenced 2 times from api_comm.o(.data)
 <LI><a href="#[e]">update_comm_data14</a> from api_comm.o(.text) referenced 2 times from api_comm.o(.data)
 <LI><a href="#[f]">Reset_Handler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[10]">NMI_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[11]">HardFault_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[12]">MemManage_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[13]">BusFault_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[14]">UsageFault_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[15]">SVC_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[16]">DebugMon_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[17]">PendSV_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[18]">SysTick_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[19]">WWDG_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1a]">PVD_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1b]">TAMPER_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1c]">RTC_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1d]">FLASH_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1e]">RCC_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1f]">EXTI0_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[20]">EXTI1_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[21]">EXTI2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[22]">EXTI3_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[23]">EXTI4_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[24]">DMA1_Channel1_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[25]">DMA1_Channel2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[26]">DMA1_Channel3_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[27]">DMA1_Channel4_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[28]">DMA1_Channel5_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[29]">DMA1_Channel6_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2a]">DMA1_Channel7_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2b]">ADC1_2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2c]">USB_HP_CAN1_TX_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2d]">USB_LP_CAN1_RX0_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2e]">CAN1_RX1_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2f]">CAN1_SCE_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[30]">EXTI9_5_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[31]">TIM1_BRK_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[32]">TIM1_UP_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[33]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[34]">TIM1_CC_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[35]">TIM2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[36]">TIM3_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[37]">TIM4_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[38]">I2C1_EV_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[39]">I2C1_ER_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[3a]">I2C2_EV_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[3b]">I2C2_ER_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[3c]">SPI1_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[3d]">SPI2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[3e]">USART1_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[3f]">USART2_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[40]">USART3_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[41]">EXTI15_10_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[42]">RTCAlarm_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[43]">USBWakeUp_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[44]">main</a> from main.o(.text) referenced from entry7.o(.ARM.Collect$$$$00000007)
 <LI><a href="#[45]">SystemInit</a> from system_stm32f10x.o(.text) referenced from startup_stm32f10x_md.o(.text)
 <LI><a href="#[46]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f10x_md.o(.text)
 <LI><a href="#[47]">_sgetc</a> from _sgetc.o(.text) referenced from __0sscanf.o(.text)
 <LI><a href="#[48]">_sbackspace</a> from _sgetc.o(.text) referenced from __0sscanf.o(.text)
 <LI><a href="#[49]">_scanf_char_input</a> from scanf_char.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[4a]">isspace</a> from isspace_c.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[4b]">fputc</a> from usart.o(.text) referenced from printfa.o(i.__0printf)
 <LI><a href="#[4c]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0sprintf)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[46]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(.text)
</UL>
<P><STRONG><a name="[2f7]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[4d]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2e4]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2f8]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7.o(.ARM.Collect$$$$00000007))

<P><STRONG><a name="[f]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>WarningTagManager</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = WarningTagManager &rArr; SetTextValue &rArr; SendStrings &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[44]"></a>main</STRONG> (Thumb, 558 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 712<LI>Call Chain = main &rArr; ProcessMessage &rArr; NotifyWriteFlash &rArr; FactoryCheck &rArr; LoadAllSettingsInFlash &rArr; UseData &rArr; variables_update &rArr; load_company_name &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_scheduler
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;take_cmd_pump
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systicket_init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_pump_entrance_pressure_check_startup_monitor
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_reset
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_find_cmd
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_pressure_check_startup_monitor
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_entrance_pressure_check_startup_monitor
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_calc
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_err_record
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debugger
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmpeq
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateUI
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateCommData
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Config
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Config
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timerx_Init
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_PWM_Configuration
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Status_Scan
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Status_GPIO_Config
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_System_Clocks
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScheduleUpdate
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Relay_GPIO_Config
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshErrorInfo
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RealtimeMeasurement
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRTC
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Initialization
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ClearFlag
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pump_Manager
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessMessage
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerUpAutoRunManager
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration2
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration1
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitVisibility
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Config
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartBeating
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FatigueCancelMonitorAvf
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FatigePumpSwitcher
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactoryCheck
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FC_Retreator
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dac_Config
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Configuration
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApiCmdExecutor
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_Configuration
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WarningTagManager
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry7.o(.ARM.Collect$$$$00000007)
</UL>
<P><STRONG><a name="[7e]"></a>HeartBeating</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, manual_control.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c8]"></a>UnCompressData</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, settings.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseDataTC
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseSettingsInFlash
</UL>

<P><STRONG><a name="[b1]"></a>set_usability</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, settings.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;variables_update
</UL>

<P><STRONG><a name="[83]"></a>load_company_name</STRONG> (Thumb, 138 bytes, Stack size 104 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = load_company_name &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Read
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;variables_update
</UL>

<P><STRONG><a name="[88]"></a>load_phone_nbr</STRONG> (Thumb, 212 bytes, Stack size 56 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = load_phone_nbr &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;variables_update
</UL>

<P><STRONG><a name="[8a]"></a>date_init_check</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, settings.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_expire_date
</UL>

<P><STRONG><a name="[89]"></a>load_expire_date</STRONG> (Thumb, 192 bytes, Stack size 32 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = load_expire_date &rArr; RefreshButtons &rArr; set_button_visible &rArr; SetControlVisiable &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetButtonValue
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshButtons
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;date_init_check
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;variables_update
</UL>

<P><STRONG><a name="[b5]"></a>load_pw_switches</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = load_pw_switches
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;variables_update
</UL>

<P><STRONG><a name="[8e]"></a>LoadPowerSavingData</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LoadPowerSavingData &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;variables_update
</UL>

<P><STRONG><a name="[6f]"></a>load_err_record</STRONG> (Thumb, 178 bytes, Stack size 40 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = load_err_record &rArr; show_an_err_record &rArr; SetTextValue &rArr; SendStrings &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_an_err_record
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Read
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[90]"></a>save_error</STRONG> (Thumb, 394 bytes, Stack size 32 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;general_recorder
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_error_recorder
</UL>

<P><STRONG><a name="[92]"></a>SaveDeviceAddress</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = SaveDeviceAddress &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactorySettings
</UL>

<P><STRONG><a name="[93]"></a>SaveUse60Hz</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = SaveUse60Hz &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactorySettings
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSettingsToFlash
</UL>

<P><STRONG><a name="[94]"></a>SaveCaliCoeffs</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = SaveCaliCoeffs &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactorySettings
</UL>

<P><STRONG><a name="[95]"></a>SaveRemoteTargetEnable</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = SaveRemoteTargetEnable &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveScheduleToFlash
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactorySettings
</UL>

<P><STRONG><a name="[96]"></a>SaveUseIoTargetPressure</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = SaveUseIoTargetPressure &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveScheduleToFlash
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactorySettings
</UL>

<P><STRONG><a name="[97]"></a>save_target_locker</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = save_target_locker &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactorySettings
</UL>

<P><STRONG><a name="[98]"></a>save_target_locker_delta</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = save_target_locker_delta &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Write
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactorySettings
</UL>

<P><STRONG><a name="[9b]"></a>save_speed_up_factor_value</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = save_speed_up_factor_value &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactorySettings
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_speed_up_factor
</UL>

<P><STRONG><a name="[9c]"></a>save_speed_up_factor</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = save_speed_up_factor &rArr; save_speed_up_factor_value &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_speed_up_factor_value
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSettingsToFlash
</UL>

<P><STRONG><a name="[9d]"></a>save_pump_cancel_freq</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = save_pump_cancel_freq &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactorySettings
</UL>

<P><STRONG><a name="[9e]"></a>save_pump_max_freq</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = save_pump_max_freq &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactorySettings
</UL>

<P><STRONG><a name="[9f]"></a>save_avf_mode</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, settings.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Write
</UL>

<P><STRONG><a name="[a0]"></a>load_target_locker</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = load_target_locker &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Read
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;variables_update
</UL>

<P><STRONG><a name="[a1]"></a>load_pump_temp_setting</STRONG> (Thumb, 446 bytes, Stack size 80 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = load_pump_temp_setting &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetButtonValue
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Read
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadAllSettingsInFlash
</UL>

<P><STRONG><a name="[aa]"></a>save_pump_temp_setting</STRONG> (Thumb, 594 bytes, Stack size 40 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = save_pump_temp_setting &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Write
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_pump_temp_setting_default
</UL>

<P><STRONG><a name="[ae]"></a>save_pump_temp_setting_default</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = save_pump_temp_setting_default &rArr; save_pump_temp_setting &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_pump_temp_setting
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactorySettings
</UL>

<P><STRONG><a name="[af]"></a>save_remote_target_default</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = save_remote_target_default &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactorySettings
</UL>

<P><STRONG><a name="[b0]"></a>variables_update</STRONG> (Thumb, 1622 bytes, Stack size 48 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = variables_update &rArr; load_company_name &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBias
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshButtons
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_target_locker
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadPowerSavingData
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_pw_switches
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_expire_date
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_phone_nbr
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_company_name
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_usability
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseData
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseSettingsInFlash
</UL>

<P><STRONG><a name="[b6]"></a>controls_update_SCREEN_SCREEN_SETTING</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = controls_update_SCREEN_SCREEN_SETTING &rArr; SetPowerSaving &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPowerSaving
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetButtonValue
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update
</UL>

<P><STRONG><a name="[b8]"></a>controls_update_SCREEN_PUMP_GROUPING</STRONG> (Thumb, 866 bytes, Stack size 16 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = controls_update_SCREEN_PUMP_GROUPING &rArr; SetTextValue &rArr; SendStrings &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlVisiable
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetButtonValue
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiSetNonNeagtive
</UL>

<P><STRONG><a name="[ba]"></a>controls_update_SCREEN_OUTLET_SENSOR</STRONG> (Thumb, 272 bytes, Stack size 24 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = controls_update_SCREEN_OUTLET_SENSOR &rArr; SetTextValue &rArr; SendStrings &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetButtonValue
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update
</UL>

<P><STRONG><a name="[bb]"></a>controls_update_SCREEN_ENTRANCE_SENSOR</STRONG> (Thumb, 318 bytes, Stack size 24 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = controls_update_SCREEN_ENTRANCE_SENSOR &rArr; SetTextValue &rArr; SendStrings &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetButtonValue
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update
</UL>

<P><STRONG><a name="[bc]"></a>controls_update_SCREEN_ENTRANCE_SENSOR0</STRONG> (Thumb, 602 bytes, Stack size 24 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = controls_update_SCREEN_ENTRANCE_SENSOR0 &rArr; SetTextValue &rArr; SendStrings &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetProgressValue
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetButtonValue
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update
</UL>

<P><STRONG><a name="[be]"></a>controls_update_SCREEN_ENTRANCE_SENSOR2</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = controls_update_SCREEN_ENTRANCE_SENSOR2 &rArr; __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetButtonValue
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update
</UL>

<P><STRONG><a name="[bf]"></a>controls_update_SCREEN_PUMP_SWITCH_CONDTION</STRONG> (Thumb, 516 bytes, Stack size 40 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = controls_update_SCREEN_PUMP_SWITCH_CONDTION &rArr; __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetButtonValue
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update
</UL>

<P><STRONG><a name="[c0]"></a>controls_update_SCREEN_SLEEP_SETTING</STRONG> (Thumb, 422 bytes, Stack size 40 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = controls_update_SCREEN_SLEEP_SETTING &rArr; __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetButtonValue
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update
</UL>

<P><STRONG><a name="[c1]"></a>controls_update_SCREEN_POWER_UP_SETTING</STRONG> (Thumb, 206 bytes, Stack size 32 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = controls_update_SCREEN_POWER_UP_SETTING &rArr; SetTextValue &rArr; SendStrings &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlVisiable
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlEnable
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetButtonValue
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update
</UL>

<P><STRONG><a name="[c3]"></a>controls_update_SCREEN_VALVE_CONTROL</STRONG> (Thumb, 166 bytes, Stack size 48 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = controls_update_SCREEN_VALVE_CONTROL &rArr; __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetButtonValue
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update
</UL>

<P><STRONG><a name="[c4]"></a>controls_update_SCREEN_VALVE_CONTROL1</STRONG> (Thumb, 118 bytes, Stack size 40 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = controls_update_SCREEN_VALVE_CONTROL1 &rArr; __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update
</UL>

<P><STRONG><a name="[c5]"></a>controls_update_SCREEN_PID_SETTING</STRONG> (Thumb, 202 bytes, Stack size 56 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = controls_update_SCREEN_PID_SETTING &rArr; __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetButtonValue
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update
</UL>

<P><STRONG><a name="[c6]"></a>controls_update</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = controls_update &rArr; controls_update_SCREEN_PID_SETTING &rArr; __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_PID_SETTING
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_VALVE_CONTROL1
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_VALVE_CONTROL
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_POWER_UP_SETTING
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_SLEEP_SETTING
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_PUMP_SWITCH_CONDTION
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_ENTRANCE_SENSOR2
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_ENTRANCE_SENSOR0
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_ENTRANCE_SENSOR
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_OUTLET_SENSOR
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_PUMP_GROUPING
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_SCREEN_SETTING
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseData
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseSettingsInFlash
</UL>

<P><STRONG><a name="[c7]"></a>UseSettingsInFlash</STRONG> (Thumb, 530 bytes, Stack size 56 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = UseSettingsInFlash &rArr; variables_update &rArr; load_company_name &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdatScheduleCell
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatchSetText
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatchSetButtonValue
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatchBegin
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;variables_update
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnCompressData
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyReadFlash
</UL>

<P><STRONG><a name="[cd]"></a>SavePowerSavingData</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = SavePowerSavingData &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSettingsToFlash
</UL>

<P><STRONG><a name="[ce]"></a>SaveSettingsToFlash</STRONG> (Thumb, 2080 bytes, Stack size 56 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = SaveSettingsToFlash &rArr; save_speed_up_factor &rArr; save_speed_up_factor_value &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteUserFlash
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Write
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePowerSavingData
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_speed_up_factor
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveUse60Hz
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiSetSmallPumpOn
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiSetNonNeagtive
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_pump_pointer
</UL>

<P><STRONG><a name="[d0]"></a>SavePW_ErrIndex</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = SavePW_ErrIndex &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyText
</UL>

<P><STRONG><a name="[d1]"></a>SaveCompanyName</STRONG> (Thumb, 74 bytes, Stack size 64 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = SaveCompanyName &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Write
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyText
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactorySettings
</UL>

<P><STRONG><a name="[d3]"></a>SavePhoneNbr</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = SavePhoneNbr &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Write
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyText
</UL>

<P><STRONG><a name="[d5]"></a>is_leap_year</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, settings.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DateCorrection
</UL>

<P><STRONG><a name="[d6]"></a>is_big_month</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = is_big_month
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DateCorrection
</UL>

<P><STRONG><a name="[d4]"></a>DateCorrection</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = DateCorrection &rArr; is_big_month
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_big_month
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_leap_year
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
</UL>

<P><STRONG><a name="[d7]"></a>SaveExpireDate</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = SaveExpireDate &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
</UL>

<P><STRONG><a name="[d8]"></a>UseDataTC</STRONG> (Thumb, 482 bytes, Stack size 56 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = UseDataTC &rArr; __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdatScheduleCell
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Read
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatchSetText
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatchSetButtonValue
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatchBegin
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnCompressData
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadAllSettingsInFlash
</UL>

<P><STRONG><a name="[da]"></a>UseData</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = UseData &rArr; variables_update &rArr; load_company_name &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;variables_update
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadAllSettingsInFlash
</UL>

<P><STRONG><a name="[db]"></a>load_pid_target_delta</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = load_pid_target_delta &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadAllSettingsInFlash
</UL>

<P><STRONG><a name="[dd]"></a>load_device_address</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = load_device_address &rArr; STM32_FLASH_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadAllSettingsInFlash
</UL>

<P><STRONG><a name="[de]"></a>load_use60hz</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = load_use60hz &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Read
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadAllSettingsInFlash
</UL>

<P><STRONG><a name="[df]"></a>load_avf_mode</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = load_avf_mode &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Read
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadAllSettingsInFlash
</UL>

<P><STRONG><a name="[e0]"></a>load_pump_cancel_freq</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = load_pump_cancel_freq &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Read
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadAllSettingsInFlash
</UL>

<P><STRONG><a name="[e1]"></a>load_outlet_pressure_cali_coeff</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = load_outlet_pressure_cali_coeff &rArr; __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Read
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadAllSettingsInFlash
</UL>

<P><STRONG><a name="[e2]"></a>load_entrance_pressure_cali_coeff</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = load_entrance_pressure_cali_coeff &rArr; __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Read
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadAllSettingsInFlash
</UL>

<P><STRONG><a name="[e3]"></a>load_remote_target_enable</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = load_remote_target_enable &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Read
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadAllSettingsInFlash
</UL>

<P><STRONG><a name="[e4]"></a>load_use_io_target_pressure</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = load_use_io_target_pressure &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Read
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadAllSettingsInFlash
</UL>

<P><STRONG><a name="[e5]"></a>load_speed_up_factor</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = load_speed_up_factor &rArr; __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Read
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadAllSettingsInFlash
</UL>

<P><STRONG><a name="[e6]"></a>load_pump_max_freq</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = load_pump_max_freq &rArr; __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Read
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadAllSettingsInFlash
</UL>

<P><STRONG><a name="[e7]"></a>LoadAllSettingsInFlash</STRONG> (Thumb, 1080 bytes, Stack size 208 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 640<LI>Call Chain = LoadAllSettingsInFlash &rArr; UseData &rArr; variables_update &rArr; load_company_name &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Read
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_pump_max_freq
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_speed_up_factor
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_use_io_target_pressure
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_remote_target_enable
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_entrance_pressure_cali_coeff
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_outlet_pressure_cali_coeff
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_pump_cancel_freq
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_avf_mode
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_use60hz
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_device_address
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_pid_target_delta
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseData
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseDataTC
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_pump_temp_setting
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyReadFlash
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactoryCheck
</UL>

<P><STRONG><a name="[e8]"></a>user_kw_melt_down</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = user_kw_melt_down &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactorySettings
</UL>

<P><STRONG><a name="[e9]"></a>FactorySettings</STRONG> (Thumb, 140 bytes, Stack size 192 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = FactorySettings &rArr; SaveCompanyName &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_error
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Write
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_kw_melt_down
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCompanyName
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_remote_target_default
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_pump_temp_setting_default
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_pump_max_freq
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_pump_cancel_freq
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_speed_up_factor_value
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_target_locker_delta
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_target_locker
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveUseIoTargetPressure
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveRemoteTargetEnable
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCaliCoeffs
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveUse60Hz
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveDeviceAddress
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyReadFlash
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactoryCheck
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiSetFactoryValues
</UL>

<P><STRONG><a name="[eb]"></a>PinChecker</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PinChecker &rArr; SetButtonValue &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetButtonValue
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseBKG_SettingsInFlash
</UL>

<P><STRONG><a name="[ec]"></a>UseBKG_SettingsInFlash</STRONG> (Thumb, 216 bytes, Stack size 8 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UseBKG_SettingsInFlash &rArr; PinChecker &rArr; SetButtonValue &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinChecker
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyReadFlash
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactoryCheck
</UL>

<P><STRONG><a name="[69]"></a>FactoryCheck</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = FactoryCheck &rArr; LoadAllSettingsInFlash &rArr; UseData &rArr; variables_update &rArr; load_company_name &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Read
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseBKG_SettingsInFlash
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactorySettings
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadAllSettingsInFlash
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyWriteFlash
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ed]"></a>WritePinToFlash</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = WritePinToFlash &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinMonitor
</UL>

<P><STRONG><a name="[ee]"></a>WriteFactoryPinToFlash</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = WriteFactoryPinToFlash &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinMonitor
</UL>

<P><STRONG><a name="[141]"></a>nbr_of_enabled_pump</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, settings.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
</UL>

<P><STRONG><a name="[ef]"></a>ExpireDateManager</STRONG> (Thumb, 850 bytes, Stack size 80 bytes, settings.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 396<LI>Call Chain = ExpireDateManager &rArr; Start_Stopper &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateRTC
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrialTimeOut
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Stopper
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlVisiable
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshButtons
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EscapeSleeper
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyReadRTC
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RealtimeMeasurement
</UL>

<P><STRONG><a name="[78]"></a>pump_pressure_check_startup_monitor</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, time_control.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1a5]"></a>reset_pump_pressure_check_startup_monitor</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, time_control.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fc_full_empty_radar
</UL>

<P><STRONG><a name="[f4]"></a>get_entrance_LP_protection_delay</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, time_control.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_entrance_pressure_check_startup_monitor
</UL>

<P><STRONG><a name="[79]"></a>pump_entrance_pressure_check_startup_monitor</STRONG> (Thumb, 46 bytes, Stack size 4 bytes, time_control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = pump_entrance_pressure_check_startup_monitor
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_entrance_LP_protection_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6a]"></a>reset_pump_entrance_pressure_check_startup_monitor</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, time_control.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_monitor
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entrance_pressure_restore_from_low_dual
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entrance_pressure_low_dual
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entrance_pressure_restore_from_low
</UL>

<P><STRONG><a name="[2f9]"></a>ReadScheduleCell</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, time_control.o(.text), UNUSED)

<P><STRONG><a name="[cc]"></a>UpdatScheduleCell</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, time_control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UpdatScheduleCell
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyText
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseDataTC
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseSettingsInFlash
</UL>

<P><STRONG><a name="[f6]"></a>CompressData</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, time_control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CompressData
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveScheduleToFlash
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadErrors
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_comm_data3
</UL>

<P><STRONG><a name="[f5]"></a>SaveScheduleToFlash</STRONG> (Thumb, 336 bytes, Stack size 72 bytes, time_control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = SaveScheduleToFlash &rArr; SaveUseIoTargetPressure &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompressData
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Write
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveUseIoTargetPressure
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveRemoteTargetEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiWriteDefaultPressure
</UL>

<P><STRONG><a name="[2fa]"></a>weekday_selected</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, time_control.o(.text), UNUSED)

<P><STRONG><a name="[13c]"></a>check_schedule_ok</STRONG> (Thumb, 98 bytes, Stack size 20 bytes, time_control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = check_schedule_ok
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
</UL>

<P><STRONG><a name="[f7]"></a>time_window_expired</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, time_control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = time_window_expired &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_next_time_window
</UL>

<P><STRONG><a name="[f8]"></a>load_next_time_window</STRONG> (Thumb, 152 bytes, Stack size 8 bytes, time_control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = load_next_time_window &rArr; time_window_expired &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_window_expired
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_scheduler
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScheduleUpdate
</UL>

<P><STRONG><a name="[fc]"></a>time_window_check</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, time_control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = time_window_check
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_scheduler
</UL>

<P><STRONG><a name="[f9]"></a>ShowTargetPressure</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, time_control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ShowTargetPressure &rArr; SetTextValue &rArr; SendStrings &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshTarget
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyReadRTC
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStopResponsor
</UL>

<P><STRONG><a name="[145]"></a>LoadTargetPressure</STRONG> (Thumb, 314 bytes, Stack size 8 bytes, time_control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LoadTargetPressure
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTargetPressure
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshTarget
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIDParament_Init
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyReadRTC
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStopResponsor
</UL>

<P><STRONG><a name="[2fb]"></a>StopTaskScheduler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, time_control.o(.text), UNUSED)

<P><STRONG><a name="[80]"></a>ScheduleUpdate</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, time_control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ScheduleUpdate &rArr; PidSetTargetPressure &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PidSetTargetPressure
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_next_time_window
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_task_scheduler
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiWriteDefaultPressure
</UL>

<P><STRONG><a name="[fb]"></a>start_task_scheduler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, time_control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = start_task_scheduler &rArr; ScheduleUpdate &rArr; PidSetTargetPressure &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScheduleUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerUpAutoRunManager
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApiCmdExecutor
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStopResponsor
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_restart
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TryToRestoreSysRunning
</UL>

<P><STRONG><a name="[81]"></a>task_scheduler</STRONG> (Thumb, 154 bytes, Stack size 8 bytes, time_control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = task_scheduler &rArr; PidSetTargetPressure &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PidSetTargetPressure
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_window_check
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_next_time_window
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b4]"></a>SetBias</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, measurement.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyText
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;variables_update
</UL>

<P><STRONG><a name="[fd]"></a>temp_para_picker</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, measurement.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = temp_para_picker
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_quantity_from_volt
</UL>

<P><STRONG><a name="[fe]"></a>pressure_para_picker</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, measurement.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = pressure_para_picker
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_quantity_from_volt
</UL>

<P><STRONG><a name="[ff]"></a>wl_para_picker</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, measurement.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = wl_para_picker
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_quantity_from_volt
</UL>

<P><STRONG><a name="[100]"></a>range_factor</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, measurement.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = range_factor &rArr; __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_quantity_from_volt
</UL>

<P><STRONG><a name="[101]"></a>phy_quantity_from_volt</STRONG> (Thumb, 310 bytes, Stack size 64 bytes, measurement.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = phy_quantity_from_volt &rArr; range_factor &rArr; __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;range_factor
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wl_para_picker
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pressure_para_picker
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temp_para_picker
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RealtimeMeasurement
</UL>

<P><STRONG><a name="[105]"></a>data2string</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, measurement.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = data2string &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RealtimeMeasurement
</UL>

<P><STRONG><a name="[10d]"></a>GetVolt</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, measurement.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RealtimeMeasurement
</UL>

<P><STRONG><a name="[10c]"></a>filter</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, measurement.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = filter
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RealtimeMeasurement
</UL>

<P><STRONG><a name="[110]"></a>update_variables</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, measurement.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RealtimeMeasurement
</UL>

<P><STRONG><a name="[10e]"></a>get_ss_type</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, measurement.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RealtimeMeasurement
</UL>

<P><STRONG><a name="[10f]"></a>get_bias</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, measurement.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RealtimeMeasurement
</UL>

<P><STRONG><a name="[108]"></a>locker_watchdog</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, measurement.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;target_locker_manager
</UL>

<P><STRONG><a name="[106]"></a>target_locker_manager</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, measurement.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = target_locker_manager &rArr; PressureInTargetRange &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PressureInTargetRange
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;locker_watchdog
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RealtimeMeasurement
</UL>

<P><STRONG><a name="[76]"></a>RealtimeMeasurement</STRONG> (Thumb, 1144 bytes, Stack size 72 bytes, measurement.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 468<LI>Call Chain = RealtimeMeasurement &rArr; ExpireDateManager &rArr; Start_Stopper &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push_cmd_pump
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetScreen
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlForeColor
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SoftwareStartConvCmd
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetFlagStatus
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;target_locker_manager
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_bias
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ss_type
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_variables
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;filter
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetVolt
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data2string
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_quantity_from_volt
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PidSetTargetPressure
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExpireDateManager
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[114]"></a>pw_str2arr</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, security.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = pw_str2arr &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinMonitor
</UL>

<P><STRONG><a name="[115]"></a>valid_chk</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, security.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = valid_chk
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinCheck
</UL>

<P><STRONG><a name="[116]"></a>equality_chk</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, security.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = equality_chk &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinCheck
</UL>

<P><STRONG><a name="[118]"></a>PinCheck</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, security.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = PinCheck &rArr; valid_chk
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equality_chk
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;valid_chk
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinMonitor
</UL>

<P><STRONG><a name="[119]"></a>PinMonitor</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, security.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = PinMonitor &rArr; pw_str2arr &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinCheck
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pw_str2arr
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetScreen
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFactoryPinToFlash
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WritePinToFlash
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyText
</UL>

<P><STRONG><a name="[11a]"></a>ShowMessage</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, security.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ShowMessage &rArr; SetTextValue &rArr; SendStrings &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetScreen
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PassStopperMonitor
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_fatal_error
</UL>

<P><STRONG><a name="[11b]"></a>PassStopperMonitor</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, security.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = PassStopperMonitor &rArr; ShowMessage &rArr; SetTextValue &rArr; SendStrings &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
</UL>

<P><STRONG><a name="[11c]"></a>debugger_clean</STRONG> (Thumb, 116 bytes, Stack size 56 bytes, security.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = debugger_clean &rArr; SetTextValue &rArr; SendStrings &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debugger
</UL>

<P><STRONG><a name="[60]"></a>debugger</STRONG> (Thumb, 196 bytes, Stack size 136 bytes, security.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = debugger &rArr; debugger_clean &rArr; SetTextValue &rArr; SendStrings &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debugger_clean
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11d]"></a>ShowCurrentPassWord</STRONG> (Thumb, 80 bytes, Stack size 48 bytes, security.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ShowCurrentPassWord &rArr; SetTextValue &rArr; SendStrings &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
</UL>

<P><STRONG><a name="[11e]"></a>display_int</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, ui_controls.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2fc]"></a>get_sig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ui_controls.o(.text), UNUSED)

<P><STRONG><a name="[11f]"></a>refresh_controls</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, ui_controls.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlVisiable
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlEnable
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>

<P><STRONG><a name="[120]"></a>Pump_Icons_Initialization</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, ui_controls.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_pump_icon
</UL>

<P><STRONG><a name="[6d]"></a>InitVisibility</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, ui_controls.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = InitVisibility &rArr; SetControlVisiable &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlVisiable
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlEnable
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[122]"></a>set_button_visible</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, ui_controls.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = set_button_visible &rArr; SetControlVisiable &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlVisiable
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlEnable
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshButtons
</UL>

<P><STRONG><a name="[123]"></a>pump_err_filter</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, ui_controls.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshButtons
</UL>

<P><STRONG><a name="[8d]"></a>RefreshButtons</STRONG> (Thumb, 208 bytes, Stack size 8 bytes, ui_controls.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = RefreshButtons &rArr; set_button_visible &rArr; SetControlVisiable &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_err_filter
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_button_visible
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UiButtonManager
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Stopper
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExpireDateManager
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;variables_update
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_expire_date
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerUpAutoRunManager
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApiCmdExecutor
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_monitor
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;general_recorder
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStopResponsor
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_restart
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_ui_sys_variables
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TryToRestoreSysRunning
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;end_of_stopper_watchdog
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_all_pumps_immediately
</UL>

<P><STRONG><a name="[124]"></a>SetButtonUsability</STRONG> (Thumb, 838 bytes, Stack size 8 bytes, ui_controls.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SetButtonUsability &rArr; SetControlVisiable &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlVisiable
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlEnable
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonUsabilityManager
</UL>

<P><STRONG><a name="[125]"></a>ButtonUsabilityManager</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, ui_controls.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetButtonUsability
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[126]"></a>RefreshDateControls</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, ui_controls.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = RefreshDateControls &rArr; SetTextValue &rArr; SendStrings &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
</UL>

<P><STRONG><a name="[127]"></a>UiButtonManager</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ui_controls.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshButtons
</UL>

<P><STRONG><a name="[128]"></a>SetVisibiltyBumpTemp</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, ui_controls.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SetVisibiltyBumpTemp &rArr; SetControlVisiable &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlVisiable
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
</UL>

<P><STRONG><a name="[14f]"></a>NOTIFYHandShake</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, userinterface.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessMessage
</UL>

<P><STRONG><a name="[129]"></a>NotifyTimer</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, userinterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = NotifyTimer &rArr; SetBuzzer &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBuzzer
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessMessage
</UL>

<P><STRONG><a name="[12b]"></a>NotifySelector</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, userinterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = NotifySelector &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessMessage
</UL>

<P><STRONG><a name="[14e]"></a>NotifyMenu</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, userinterface.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessMessage
</UL>

<P><STRONG><a name="[14d]"></a>NotifyMeter</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, userinterface.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessMessage
</UL>

<P><STRONG><a name="[14c]"></a>NotifySlider</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, userinterface.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessMessage
</UL>

<P><STRONG><a name="[14b]"></a>NotifyProgress</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, userinterface.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessMessage
</UL>

<P><STRONG><a name="[12c]"></a>NotifyText</STRONG> (Thumb, 5422 bytes, Stack size 96 bytes, userinterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = NotifyText &rArr; PinMonitor &rArr; pw_str2arr &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdatePumpFreq
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshTarget
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Manual_FC
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinMonitor
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetScreen
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdatScheduleCell
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlVisiable
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlEnable
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBias
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePhoneNbr
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCompanyName
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePW_ErrIndex
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessMessage
</UL>

<P><STRONG><a name="[132]"></a>button_controller</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, userinterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = button_controller &rArr; SetControlVisiable &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlVisiable
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEnablityForAllManualButtons
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;partner_button_manager
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;manual_fc_button_manager
</UL>

<P><STRONG><a name="[134]"></a>is_fc_button</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, userinterface.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;manual_fc_button_manager
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_manual_controls_non_avf
</UL>

<P><STRONG><a name="[133]"></a>manual_fc_button_manager</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, userinterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = manual_fc_button_manager &rArr; button_controller &rArr; SetControlVisiable &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_fc_button
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_controller
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
</UL>

<P><STRONG><a name="[135]"></a>all_pump_off_avf</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, userinterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = all_pump_off_avf &rArr; push_cmd_pump
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Manual_Control_Pump
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push_cmd_pump
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
</UL>

<P><STRONG><a name="[138]"></a>get_partner</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, userinterface.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;partner_button_manager
</UL>

<P><STRONG><a name="[137]"></a>partner_button_manager</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, userinterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = partner_button_manager &rArr; button_controller &rArr; SetControlVisiable &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_partner
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_controller
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
</UL>

<P><STRONG><a name="[139]"></a>all_pump_off</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, userinterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = all_pump_off &rArr; Manual_FC &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Manual_FC
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Manual_Control_Pump
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push_cmd_pump
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
</UL>

<P><STRONG><a name="[13a]"></a>NotifyButton</STRONG> (Thumb, 5944 bytes, Stack size 40 bytes, userinterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 436<LI>Call Chain = NotifyButton &rArr; ExpireDateManager &rArr; Start_Stopper &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_mod_1_2
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTargetPressure
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdatePumpFreq
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_FC_Zero
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshTarget
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIDParament_Init
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Manual_FC
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Manual_Control_Pump
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphChannelDataClear
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearErrorMsg
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_pump_off
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;partner_button_manager
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_pump_off_avf
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;manual_fc_button_manager
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_fc_button
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetVisibiltyBumpTemp
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDateControls
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetButtonUsability
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCurrentPassWord
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PassStopperMonitor
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMessage
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push_cmd_pump
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetScreen
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_task_scheduler
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_schedule_ok
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveScheduleToFlash
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdatScheduleCell
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Stopper
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPowerSaving
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlVisiable
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlEnable
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetButtonValue
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBias
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Write
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshButtons
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EscapeSleeper
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExpireDateManager
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nbr_of_enabled_pump
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactorySettings
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveExpireDate
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DateCorrection
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSettingsToFlash
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_pump_temp_setting
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_target_locker_delta
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_target_locker
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveDeviceAddress
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debugger
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScheduleUpdate
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WarningTagManager
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessMessage
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_manual_controls_avf
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_manual_controls_non_avf
</UL>

<P><STRONG><a name="[14a]"></a>NotifyScreen</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, userinterface.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessMessage
</UL>

<P><STRONG><a name="[143]"></a>NotifyReadRTC</STRONG> (Thumb, 400 bytes, Stack size 56 bytes, userinterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 452<LI>Call Chain = NotifyReadRTC &rArr; ExpireDateManager &rArr; Start_Stopper &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpMileageMonitor
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTargetPressure
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTargetPressure
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExpireDateManager
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessMessage
</UL>

<P><STRONG><a name="[146]"></a>NotifyReadFlash</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, userinterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = NotifyReadFlash &rArr; LoadAllSettingsInFlash &rArr; UseData &rArr; variables_update &rArr; load_company_name &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseBKG_SettingsInFlash
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactorySettings
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadAllSettingsInFlash
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseSettingsInFlash
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessMessage
</UL>

<P><STRONG><a name="[147]"></a>NotifyWriteFlash</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, userinterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = NotifyWriteFlash &rArr; FactoryCheck &rArr; LoadAllSettingsInFlash &rArr; UseData &rArr; variables_update &rArr; load_company_name &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactoryCheck
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessMessage
</UL>

<P><STRONG><a name="[148]"></a>NotifyTouchXY</STRONG> (Thumb, 32 bytes, Stack size 72 bytes, userinterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = NotifyTouchXY &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendStrings
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessMessage
</UL>

<P><STRONG><a name="[6c]"></a>ProcessMessage</STRONG> (Thumb, 708 bytes, Stack size 48 bytes, userinterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 712<LI>Call Chain = ProcessMessage &rArr; NotifyWriteFlash &rArr; FactoryCheck &rArr; LoadAllSettingsInFlash &rArr; UseData &rArr; variables_update &rArr; load_company_name &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyTouchXY
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyWriteFlash
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyReadFlash
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyReadRTC
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyScreen
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyText
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyProgress
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifySlider
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyMeter
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyMenu
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifySelector
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyTimer
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NOTIFYHandShake
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[70]"></a>UpdateUI</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, userinterface.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2fd]"></a>next_fc_button</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, userinterface.o(.text), UNUSED)

<P><STRONG><a name="[150]"></a>SetEnablityForAllManualButtons</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, userinterface.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_controller
</UL>

<P><STRONG><a name="[f1]"></a>TrialTimeOut</STRONG> (Thumb, 88 bytes, Stack size 20 bytes, userinterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TrialTimeOut
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExpireDateManager
</UL>

<P><STRONG><a name="[f0]"></a>UpdateRTC</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, userinterface.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExpireDateManager
</UL>

<P><STRONG><a name="[7a]"></a>PowerUpAutoRunManager</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, userinterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = PowerUpAutoRunManager &rArr; start_mod_1_2 &rArr; FallAsleep &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_mod_1_2
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIDParament_Init
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_task_scheduler
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshButtons
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[77]"></a>ApiCmdExecutor</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, userinterface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = ApiCmdExecutor &rArr; start_mod_1_2 &rArr; FallAsleep &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_mod_1_2
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReturnModBusCMD
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIDParament_Init
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_task_scheduler
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Stopper
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshButtons
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EscapeSleeper
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[17c]"></a>traffic_light</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pump_running.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_fatige_switching
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fc_full_empty_radar
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_canceling_monitor
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_adding_monitor
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FatigeSwitchManager
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddPumpSwitchManager
</UL>

<P><STRONG><a name="[152]"></a>LoadFrequency</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LoadFrequency &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_frequency
</UL>

<P><STRONG><a name="[153]"></a>save_pump_pointer</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = save_pump_pointer &rArr; SaveSettingsToFlash &rArr; save_speed_up_factor &rArr; save_speed_up_factor_value &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSettingsToFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Stopper
</UL>

<P><STRONG><a name="[154]"></a>execute_cmd</STRONG> (Thumb, 366 bytes, Stack size 64 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 412<LI>Call Chain = execute_cmd &rArr; AnswerApiSetFactoryValues &rArr; FactorySettings &rArr; SaveCompanyName &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlForeColor
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetProgressValue
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlVisiable
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlEnable
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetButtonValue
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiWriteDefaultPressure
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiSetSmallPumpOn
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiSetNonNeagtive
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiSetFactoryValues
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadTargetPressure
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadSmallPump
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadPump3Temp
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadPump2Temp
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadPump1Temp
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadPump
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadOutlet
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadFrequency
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadErrors
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadEntrance
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadDefaultPressure
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;take_cmd_pump
</UL>

<P><STRONG><a name="[111]"></a>push_cmd_pump</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = push_cmd_pump
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_pump_off
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_pump_off_avf
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_pump_icon
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RealtimeMeasurement
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiWriteDefaultPressure
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modbus_cmd_processor
</UL>

<P><STRONG><a name="[71]"></a>take_cmd_pump</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 428<LI>Call Chain = take_cmd_pump &rArr; execute_cmd &rArr; AnswerApiSetFactoryValues &rArr; FactorySettings &rArr; SaveCompanyName &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[164]"></a>UpdateDac</STRONG> (Thumb, 124 bytes, Stack size 56 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = UpdateDac &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_SetChannel2Data
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_SetChannel1Data
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdatePumpFreq
</UL>

<P><STRONG><a name="[131]"></a>UpdatePumpFreq</STRONG> (Thumb, 136 bytes, Stack size 80 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = UpdatePumpFreq &rArr; UpdateDac &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdatePWM
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateDac
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_mod_1_2
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyText
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FatigueCancelMonitorAvf
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wake_up_watchdog
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;full_wake_up
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_server
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wake_up_from_half_server
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseSparePump
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cancel_a_pump
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_a_pump
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_FC
</UL>

<P><STRONG><a name="[168]"></a>Control_FC</STRONG> (Thumb, 238 bytes, Stack size 48 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = Control_FC &rArr; UpdatePumpFreq &rArr; UpdateDac &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdatePumpFreq
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_SetChannel1Data
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_FC_Zero
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FC_Retreator
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_calc_core
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_FC_StartValue
</UL>

<P><STRONG><a name="[130]"></a>Manual_FC</STRONG> (Thumb, 80 bytes, Stack size 48 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Manual_FC &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_SetChannel1Data
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_pump_off
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyText
</UL>

<P><STRONG><a name="[169]"></a>WakeUpPressureAlert</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = WakeUpPressureAlert &rArr; __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wake_up_watchdog
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_watchdog
</UL>

<P><STRONG><a name="[16a]"></a>SleepPressureConfirmed</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SleepPressureConfirmed
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_watchdog
</UL>

<P><STRONG><a name="[16b]"></a>GetCurrentFrequency</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetCurrentFrequency &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_watchdog
</UL>

<P><STRONG><a name="[16c]"></a>set_pid_factors</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = set_pid_factors &rArr; __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIDParament_Init
</UL>

<P><STRONG><a name="[fa]"></a>PidSetTargetPressure</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = PidSetTargetPressure &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTargetPressure
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshTarget
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_scheduler
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScheduleUpdate
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RealtimeMeasurement
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStopResponsor
</UL>

<P><STRONG><a name="[13f]"></a>UpdateTargetPressure</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = UpdateTargetPressure &rArr; PidSetTargetPressure &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PidSetTargetPressure
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTargetPressure
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStopResponsor
</UL>

<P><STRONG><a name="[13d]"></a>PIDParament_Init</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = PIDParament_Init &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTargetPressure
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_pid_factors
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerUpAutoRunManager
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApiCmdExecutor
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStopResponsor
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_restart
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TryToRestoreSysRunning
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wake_up
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;half_wake_up_server
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wake_up_server
</UL>

<P><STRONG><a name="[16d]"></a>in_target_zone</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = in_target_zone &rArr; __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fc_full_empty_radar
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_adding_monitor
</UL>

<P><STRONG><a name="[121]"></a>update_pump_icon</STRONG> (Thumb, 138 bytes, Stack size 12 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = update_pump_icon &rArr; push_cmd_pump
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push_cmd_pump
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pump_Icons_Initialization
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwitchPump
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_to_new_pump
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_a_pump
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_new_pump
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_new_bucket
</UL>

<P><STRONG><a name="[19d]"></a>update_focused_pump_index</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, pump_running.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_mod_1_2
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_focused_ind_for_wake_up
</UL>

<P><STRONG><a name="[16e]"></a>Set_FC_StartValue</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = Set_FC_StartValue &rArr; Control_FC &rArr; UpdatePumpFreq &rArr; UpdateDac &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_FC
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_mod_1_2
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fc_pump1_restart
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wake_up_watchdog
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;full_wake_up
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wake_up_from_half_server
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FallAsleep
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reload_fc_bucket
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FatigeSwitchManager
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddPumpSwitchManagerMode2
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddPumpSwitchManager
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartAnFcPump
</UL>

<P><STRONG><a name="[13b]"></a>Set_FC_Zero</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = Set_FC_Zero &rArr; Control_FC &rArr; UpdatePumpFreq &rArr; UpdateDac &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_FC
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Stopper
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_server
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wake_up_from_half_server
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseSparePump
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_small_pump
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;end_of_stopper_watchdog
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FatigeSwitchManager
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddPumpSwitchManagerMode2
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddPumpSwitchManager
</UL>

<P><STRONG><a name="[16f]"></a>show_frequency_for_pump</STRONG> (Thumb, 284 bytes, Stack size 32 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = show_frequency_for_pump &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FC_Retreator
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_frequency
</UL>

<P><STRONG><a name="[170]"></a>show_frequency</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = show_frequency &rArr; show_frequency_for_pump &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_frequency_for_pump
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_mod_1_2
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fc_pump1_restart
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wake_up_watchdog
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;full_wake_up
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wake_up_from_half_server
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseSparePump
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reload_fc_bucket
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_calc_core
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FatigeSwitchManager
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddPumpSwitchManagerMode2
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddPumpSwitchManager
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartAnFcPump
</UL>

<P><STRONG><a name="[172]"></a>control_pump</STRONG> (Thumb, 198 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = control_pump
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_mod_1_2
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwitchPump
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_to_new_pump
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cancel_a_pump
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_a_pump
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_new_pump
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_new_bucket
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartAnFcPump
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pause
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_to_pf
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_to_fc
</UL>

<P><STRONG><a name="[171]"></a>switch_to_fc</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = switch_to_fc &rArr; SetTextValue &rArr; SendStrings &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlVisiable
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnimationStart
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;control_pump
</UL>
<BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fc_pump1_restart
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wake_up_watchdog
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;full_wake_up
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wake_up_from_half_server
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FatigeSwitchManager
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddPumpSwitchManagerMode2
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddPumpSwitchManager
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_up_server
</UL>

<P><STRONG><a name="[174]"></a>switch_to_pf</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = switch_to_pf &rArr; SetTextValue &rArr; SendStrings &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlVisiable
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnimationStart
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;control_pump
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_fatige_switching
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_new_bucket
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FatigeSwitchManager
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddPumpSwitchManager
</UL>

<P><STRONG><a name="[175]"></a>pause</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = pause &rArr; SetTextValue &rArr; SendStrings &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlVisiable
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnimationStop
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;control_pump
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseSparePump
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_fatige_switching
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FatigeSwitchManager
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddPumpSwitchManagerMode2
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddPumpSwitchManager
</UL>

<P><STRONG><a name="[177]"></a>start_up_server</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = start_up_server &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshErrorInfo
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_to_fc
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fc_manager
</UL>

<P><STRONG><a name="[2fe]"></a>the_left</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, pump_running.o(.text), UNUSED)

<P><STRONG><a name="[18f]"></a>find_next_pf_head</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = find_next_pf_head
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_the_pump_to_be_canceled
</UL>

<P><STRONG><a name="[17b]"></a>escape_pump_adding_loop</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, pump_running.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FatigeSwitchManager
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddPumpSwitchManager
</UL>

<P><STRONG><a name="[178]"></a>StartAnFcPump</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = StartAnFcPump &rArr; Set_FC_StartValue &rArr; Control_FC &rArr; UpdatePumpFreq &rArr; UpdateDac &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlVisiable
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnimationStart
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;control_pump
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_frequency
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_FC_StartValue
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseSparePump
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_fatige_switching_avf
</UL>

<P><STRONG><a name="[17a]"></a>find_target_pump</STRONG> (Thumb, 242 bytes, Stack size 16 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = find_target_pump
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseSparePump
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_fatige_switching
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;use_new_bucket
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_new_bucket
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FatigeSwitchManager
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddPumpSwitchManager
</UL>

<P><STRONG><a name="[179]"></a>AddPumpSwitchManager</STRONG> (Thumb, 922 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = AddPumpSwitchManager &rArr; Set_FC_Zero &rArr; Control_FC &rArr; UpdatePumpFreq &rArr; UpdateDac &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_FC_Zero
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_target_pump
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;escape_pump_adding_loop
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pause
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_to_pf
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_to_fc
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_frequency
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_FC_StartValue
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;traffic_light
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fc_manager
</UL>

<P><STRONG><a name="[17d]"></a>AddPumpSwitchManagerMode2</STRONG> (Thumb, 728 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = AddPumpSwitchManagerMode2 &rArr; Set_FC_Zero &rArr; Control_FC &rArr; UpdatePumpFreq &rArr; UpdateDac &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_FC_Zero
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pause
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_to_fc
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_frequency
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_FC_StartValue
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fc_manager
</UL>

<P><STRONG><a name="[17f]"></a>freeze_pf_pump</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = freeze_pf_pump
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseSparePump
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_fatige_switching
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FatigeSwitchManager
</UL>

<P><STRONG><a name="[17e]"></a>FatigeSwitchManager</STRONG> (Thumb, 1140 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = FatigeSwitchManager &rArr; Set_FC_Zero &rArr; Control_FC &rArr; UpdatePumpFreq &rArr; UpdateDac &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_FC_Zero
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;freeze_pf_pump
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_target_pump
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;escape_pump_adding_loop
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pause
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_to_pf
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_to_fc
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_frequency
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_FC_StartValue
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;traffic_light
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fc_manager
</UL>

<P><STRONG><a name="[181]"></a>get_max_nbr</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, pump_running.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_fatige_switching
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fc_full_empty_radar
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;use_new_bucket
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_new_bucket
</UL>

<P><STRONG><a name="[180]"></a>load_new_bucket</STRONG> (Thumb, 254 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = load_new_bucket &rArr; switch_to_pf &rArr; SetTextValue &rArr; SendStrings &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_pump_icon
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_max_nbr
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_target_pump
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_to_pf
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;control_pump
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;use_new_bucket
</UL>

<P><STRONG><a name="[182]"></a>empty_fc_bucket</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = empty_fc_bucket &rArr; __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Stopper
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;use_new_bucket
</UL>

<P><STRONG><a name="[183]"></a>use_new_bucket</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = use_new_bucket &rArr; load_new_bucket &rArr; switch_to_pf &rArr; SetTextValue &rArr; SendStrings &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;empty_fc_bucket
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_new_bucket
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_max_nbr
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_target_pump
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_pump_adding
</UL>

<P><STRONG><a name="[184]"></a>get_step_up_length</STRONG> (Thumb, 240 bytes, Stack size 72 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = get_step_up_length &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_calc_core
</UL>

<P><STRONG><a name="[18a]"></a>get_pump_cancel_freq</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, pump_running.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_canceling_monitor
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_calc_core
</UL>

<P><STRONG><a name="[185]"></a>get_gap</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = get_gap &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select_algo
</UL>

<P><STRONG><a name="[186]"></a>select_algo</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = select_algo &rArr; get_gap &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gap
</UL>
<BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_running_initializaition
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_calc_core
</UL>

<P><STRONG><a name="[187]"></a>pid_calc_core</STRONG> (Thumb, 1178 bytes, Stack size 88 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = pid_calc_core &rArr; Control_FC &rArr; UpdatePumpFreq &rArr; UpdateDac &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select_algo
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_pump_cancel_freq
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_step_up_length
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_frequency
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_FC
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_calc
</UL>

<P><STRONG><a name="[73]"></a>pid_calc</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = pid_calc &rArr; pid_calc_core &rArr; Control_FC &rArr; UpdatePumpFreq &rArr; UpdateDac &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_calc_core
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[136]"></a>Manual_Control_Pump</STRONG> (Thumb, 362 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Manual_Control_Pump
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_pump_off
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_pump_off_avf
</UL>

<P><STRONG><a name="[18b]"></a>start_new_pump</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, pump_running.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_pump_icon
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;control_pump
</UL>

<P><STRONG><a name="[18c]"></a>stop_a_pump</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = stop_a_pump &rArr; UpdatePumpFreq &rArr; UpdateDac &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdatePumpFreq
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_pump_icon
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlVisiable
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnimationStop
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;control_pump
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Stopper
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FatigueCancelMonitorAvf
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wake_up_from_half_server
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseSparePump
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_fatige_switching_avf
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_small_pump
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_manager
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_all_pumps_immediately
</UL>

<P><STRONG><a name="[18d]"></a>stop_all_pumps_immediately</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = stop_all_pumps_immediately &rArr; stop_a_pump &rArr; UpdatePumpFreq &rArr; UpdateDac &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshButtons
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_a_pump
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Stopper
</UL>

<P><STRONG><a name="[18e]"></a>find_the_pump_to_be_canceled</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = find_the_pump_to_be_canceled &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_next_pf_head
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_fatige_switching
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cancel_a_pump
</UL>

<P><STRONG><a name="[190]"></a>find_the_pump_to_be_canceled_avf_mode</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = find_the_pump_to_be_canceled_avf_mode &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_fatige_switching_avf
</UL>

<P><STRONG><a name="[192]"></a>find_the_new_focused_pump_avf_mode</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, pump_running.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cancel_a_pump
</UL>

<P><STRONG><a name="[194]"></a>update_index_pf_queue_head</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, pump_running.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_to_new_pump
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cancel_a_pump
</UL>

<P><STRONG><a name="[191]"></a>cancel_a_pump</STRONG> (Thumb, 420 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = cancel_a_pump &rArr; ShortCutToSleep &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdatePumpFreq
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlVisiable
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShortCutToSleep
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnimationStop
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_index_pf_queue_head
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_the_new_focused_pump_avf_mode
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_the_pump_to_be_canceled
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;control_pump
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_pump_canceling
</UL>

<P><STRONG><a name="[195]"></a>reload_fc_bucket</STRONG> (Thumb, 196 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = reload_fc_bucket &rArr; Set_FC_StartValue &rArr; Control_FC &rArr; UpdatePumpFreq &rArr; UpdateDac &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_frequency
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_FC_StartValue
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_pump_canceling
</UL>

<P><STRONG><a name="[2ff]"></a>get_win_number</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, pump_running.o(.text), UNUSED)

<P><STRONG><a name="[300]"></a>reset_window</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, pump_running.o(.text), UNUSED)

<P><STRONG><a name="[196]"></a>switch_to_new_pump</STRONG> (Thumb, 104 bytes, Stack size 12 bytes, pump_running.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_pump_icon
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_index_pf_queue_head
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;control_pump
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;use_new_pump
</UL>

<P><STRONG><a name="[198]"></a>find_spare</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, pump_running.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;use_new_pump
</UL>

<P><STRONG><a name="[197]"></a>use_new_pump</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, pump_running.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_spare
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_to_new_pump
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[19a]"></a>clear_tables</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, pump_running.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_running_initializaition
</UL>

<P><STRONG><a name="[199]"></a>pump_running_initializaition</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = pump_running_initializaition &rArr; select_algo &rArr; get_gap &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_tables
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select_algo
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_mod_1_2
</UL>

<P><STRONG><a name="[19b]"></a>FindLeastUsedPump</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FindLeastUsedPump
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_focused_ind_for_wake_up
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFocus
</UL>

<P><STRONG><a name="[19c]"></a>SetFocus</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SetFocus &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindLeastUsedPump
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_mod_1_2
</UL>

<P><STRONG><a name="[13e]"></a>start_mod_1_2</STRONG> (Thumb, 342 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = start_mod_1_2 &rArr; FallAsleep &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdatePumpFreq
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlVisiable
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FallAsleep
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnimationStart
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFocus
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_running_initializaition
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;control_pump
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_frequency
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_FC_StartValue
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_focused_pump_index
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerUpAutoRunManager
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApiCmdExecutor
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStopResponsor
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_restart
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TryToRestoreSysRunning
</UL>

<P><STRONG><a name="[19f]"></a>execute_pump_adding</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = execute_pump_adding &rArr; use_new_bucket &rArr; load_new_bucket &rArr; switch_to_pf &rArr; SetTextValue &rArr; SendStrings &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;use_new_bucket
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_adding_monitor
</UL>

<P><STRONG><a name="[1a0]"></a>pump_adding_monitor</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = pump_adding_monitor &rArr; execute_pump_adding &rArr; use_new_bucket &rArr; load_new_bucket &rArr; switch_to_pf &rArr; SetTextValue &rArr; SendStrings &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_pump_adding
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;in_target_zone
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;traffic_light
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fc_manager
</UL>

<P><STRONG><a name="[1a1]"></a>execute_pump_canceling</STRONG> (Thumb, 588 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = execute_pump_canceling &rArr; cancel_a_pump &rArr; ShortCutToSleep &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reload_fc_bucket
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cancel_a_pump
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_canceling_monitor
</UL>

<P><STRONG><a name="[1a3]"></a>get_floor</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, pump_running.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_canceling_monitor
</UL>

<P><STRONG><a name="[1a2]"></a>pump_canceling_monitor</STRONG> (Thumb, 212 bytes, Stack size 16 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = pump_canceling_monitor &rArr; execute_pump_canceling &rArr; cancel_a_pump &rArr; ShortCutToSleep &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_floor
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_pump_canceling
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_pump_cancel_freq
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;traffic_light
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fc_manager
</UL>

<P><STRONG><a name="[1a4]"></a>fc_full_empty_radar</STRONG> (Thumb, 330 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = fc_full_empty_radar &rArr; in_target_zone &rArr; __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_pump_pressure_check_startup_monitor
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_max_nbr
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;in_target_zone
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;traffic_light
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fc_manager
</UL>

<P><STRONG><a name="[1a6]"></a>fc_manager</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = fc_manager &rArr; pump_canceling_monitor &rArr; execute_pump_canceling &rArr; cancel_a_pump &rArr; ShortCutToSleep &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fc_full_empty_radar
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_canceling_monitor
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_adding_monitor
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FatigeSwitchManager
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddPumpSwitchManagerMode2
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddPumpSwitchManager
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_up_server
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pump_Manager
</UL>

<P><STRONG><a name="[1a9]"></a>next_running_pump</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, pump_running.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Stopper
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_manager
</UL>

<P><STRONG><a name="[1a7]"></a>end_of_stopper_watchdog</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = end_of_stopper_watchdog &rArr; Set_FC_Zero &rArr; Control_FC &rArr; UpdatePumpFreq &rArr; UpdateDac &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_FC_Zero
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshButtons
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Stopper
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_manager
</UL>

<P><STRONG><a name="[1a8]"></a>stop_manager</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = stop_manager &rArr; end_of_stopper_watchdog &rArr; Set_FC_Zero &rArr; Control_FC &rArr; UpdatePumpFreq &rArr; UpdateDac &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;end_of_stopper_watchdog
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_running_pump
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_a_pump
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pump_Manager
</UL>

<P><STRONG><a name="[1aa]"></a>stop_small_pump</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = stop_small_pump &rArr; Set_FC_Zero &rArr; Control_FC &rArr; UpdatePumpFreq &rArr; UpdateDac &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_FC_Zero
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_a_pump
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Stopper
</UL>

<P><STRONG><a name="[f2]"></a>Start_Stopper</STRONG> (Thumb, 692 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = Start_Stopper &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_FC_Zero
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshButtons
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshErrorInfo
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_small_pump
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;end_of_stopper_watchdog
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_running_pump
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_all_pumps_immediately
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_a_pump
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;empty_fc_bucket
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_pump_pointer
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExpireDateManager
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApiCmdExecutor
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_monitor
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStopResponsor
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entrance_pressure_low
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaterLevelMonitor
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;outlet_pressure_high
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;outlet_pressure_low
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;full_wake_up
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wake_up
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wake_up_from_half_server
</UL>

<P><STRONG><a name="[74]"></a>Pump_Manager</STRONG> (Thumb, 146 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = Pump_Manager &rArr; fc_manager &rArr; pump_canceling_monitor &rArr; execute_pump_canceling &rArr; cancel_a_pump &rArr; ShortCutToSleep &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepManager
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_manager
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fc_manager
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1ad]"></a>get_fc_pump_index</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, pump_running.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsSmallPump
</UL>

<P><STRONG><a name="[1ac]"></a>IsSmallPump</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, pump_running.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fc_pump_index
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WakeUpDelay
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WakeUpPressureBias
</UL>

<P><STRONG><a name="[1b2]"></a>jump_to_new_fc_pump</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, pump_running.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FatigePumpSwitcher
</UL>

<P><STRONG><a name="[75]"></a>FatigueCancelMonitorAvf</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = FatigueCancelMonitorAvf &rArr; stop_a_pump &rArr; UpdatePumpFreq &rArr; UpdateDac &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdatePumpFreq
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_a_pump
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1af]"></a>find_a_spare_pump</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, pump_running.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_fatige_switching_avf
</UL>

<P><STRONG><a name="[1ae]"></a>start_fatige_switching_avf</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = start_fatige_switching_avf &rArr; StartAnFcPump &rArr; Set_FC_StartValue &rArr; Control_FC &rArr; UpdatePumpFreq &rArr; UpdateDac &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_a_spare_pump
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_the_pump_to_be_canceled_avf_mode
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_a_pump
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartAnFcPump
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_fatige_switching
</UL>

<P><STRONG><a name="[1b1]"></a>find_a_running_pf_pump</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = find_a_running_pf_pump
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_fatige_switching
</UL>

<P><STRONG><a name="[1b0]"></a>start_fatige_switching</STRONG> (Thumb, 576 bytes, Stack size 24 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = start_fatige_switching &rArr; start_fatige_switching_avf &rArr; StartAnFcPump &rArr; Set_FC_StartValue &rArr; Control_FC &rArr; UpdatePumpFreq &rArr; UpdateDac &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_a_running_pf_pump
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_fatige_switching_avf
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_the_pump_to_be_canceled
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_max_nbr
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;freeze_pf_pump
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_target_pump
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pause
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_to_pf
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;traffic_light
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FatigePumpSwitcher
</UL>

<P><STRONG><a name="[7c]"></a>FatigePumpSwitcher</STRONG> (Thumb, 232 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = FatigePumpSwitcher &rArr; start_fatige_switching &rArr; start_fatige_switching_avf &rArr; StartAnFcPump &rArr; Set_FC_StartValue &rArr; Control_FC &rArr; UpdatePumpFreq &rArr; UpdateDac &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_fatige_switching
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jump_to_new_fc_pump
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1b4]"></a>update_focused_pump</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, pump_running.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseSparePump
</UL>

<P><STRONG><a name="[1b3]"></a>UseSparePump</STRONG> (Thumb, 340 bytes, Stack size 16 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = UseSparePump &rArr; StartAnFcPump &rArr; Set_FC_StartValue &rArr; Control_FC &rArr; UpdatePumpFreq &rArr; UpdateDac &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdatePumpFreq
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_FC_Zero
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_focused_pump
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_a_pump
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;freeze_pf_pump
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_target_pump
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartAnFcPump
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pause
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_frequency
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_error
</UL>

<P><STRONG><a name="[107]"></a>PressureInTargetRange</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = PressureInTargetRange &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;target_locker_manager
</UL>

<P><STRONG><a name="[7b]"></a>FC_Retreator</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = FC_Retreator &rArr; Control_FC &rArr; UpdatePumpFreq &rArr; UpdateDac &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_frequency_for_pump
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_FC
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[12d]"></a>RefreshTarget</STRONG> (Thumb, 642 bytes, Stack size 8 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = RefreshTarget &rArr; PidSetTargetPressure &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PidSetTargetPressure
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTargetPressure
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTargetPressure
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyText
</UL>

<P><STRONG><a name="[144]"></a>PumpMileageMonitor</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, pump_running.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = PumpMileageMonitor &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyReadRTC
</UL>

<P><STRONG><a name="[1be]"></a>SleepFrequency</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, pump_sleeping.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_watchdog
</UL>

<P><STRONG><a name="[1b5]"></a>WakeUpPressureBias</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, pump_sleeping.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsSmallPump
</UL>

<P><STRONG><a name="[1b6]"></a>WakeUpDelay</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, pump_sleeping.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsSmallPump
</UL>

<P><STRONG><a name="[1b7]"></a>SwitchPump</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, pump_sleeping.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = SwitchPump &rArr; update_pump_icon &rArr; push_cmd_pump
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_pump_icon
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;control_pump
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wake_up_watchdog
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;full_wake_up
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wake_up
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_server
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wake_up_from_half_server
</UL>

<P><STRONG><a name="[1b8]"></a>wake_up_server</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, pump_sleeping.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = wake_up_server &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIDParament_Init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshErrorInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepManager
</UL>

<P><STRONG><a name="[1b9]"></a>refresh_focused_ind_for_wake_up</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, pump_sleeping.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = refresh_focused_ind_for_wake_up &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindLeastUsedPump
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_focused_pump_index
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;full_wake_up
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wake_up
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wake_up_from_half_server
</UL>

<P><STRONG><a name="[1ba]"></a>wake_up_from_half_server</STRONG> (Thumb, 276 bytes, Stack size 8 bytes, pump_sleeping.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = wake_up_from_half_server &rArr; Start_Stopper &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdatePumpFreq
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_FC_Zero
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Stopper
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshErrorInfo
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_focused_ind_for_wake_up
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwitchPump
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_a_pump
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_to_fc
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_frequency
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_FC_StartValue
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepManager
</UL>

<P><STRONG><a name="[1bb]"></a>half_wake_up_server</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, pump_sleeping.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = half_wake_up_server &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIDParament_Init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshErrorInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepManager
</UL>

<P><STRONG><a name="[1bc]"></a>sleep_server</STRONG> (Thumb, 246 bytes, Stack size 8 bytes, pump_sleeping.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = sleep_server &rArr; Set_FC_Zero &rArr; Control_FC &rArr; UpdatePumpFreq &rArr; UpdateDac &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdatePumpFreq
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_FC_Zero
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlVisiable
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwitchPump
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnimationStop
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepManager
</UL>

<P><STRONG><a name="[19e]"></a>FallAsleep</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, pump_sleeping.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = FallAsleep &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshErrorInfo
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_FC_StartValue
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_mod_1_2
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_watchdog
</UL>

<P><STRONG><a name="[193]"></a>ShortCutToSleep</STRONG> (Thumb, 176 bytes, Stack size 8 bytes, pump_sleeping.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = ShortCutToSleep &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshErrorInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cancel_a_pump
</UL>

<P><STRONG><a name="[1bd]"></a>sleep_watchdog</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, pump_sleeping.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = sleep_watchdog &rArr; FallAsleep &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepFrequency
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FallAsleep
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentFrequency
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepPressureConfirmed
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WakeUpPressureAlert
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepManager
</UL>

<P><STRONG><a name="[1bf]"></a>wake_up</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, pump_sleeping.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = wake_up &rArr; Start_Stopper &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIDParament_Init
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Stopper
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshErrorInfo
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_focused_ind_for_wake_up
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwitchPump
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wake_up_watchdog
</UL>

<P><STRONG><a name="[1c0]"></a>full_wake_up</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, pump_sleeping.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = full_wake_up &rArr; Start_Stopper &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdatePumpFreq
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Stopper
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshErrorInfo
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_focused_ind_for_wake_up
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwitchPump
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_to_fc
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_frequency
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_FC_StartValue
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wake_up_watchdog
</UL>

<P><STRONG><a name="[1c1]"></a>wake_up_watchdog</STRONG> (Thumb, 626 bytes, Stack size 16 bytes, pump_sleeping.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = wake_up_watchdog &rArr; full_wake_up &rArr; Start_Stopper &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdatePumpFreq
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;full_wake_up
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wake_up
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwitchPump
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_to_fc
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_frequency
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_FC_StartValue
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WakeUpPressureAlert
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepManager
</UL>

<P><STRONG><a name="[f3]"></a>EscapeSleeper</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, pump_sleeping.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExpireDateManager
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApiCmdExecutor
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStopResponsor
</UL>

<P><STRONG><a name="[1ab]"></a>SleepManager</STRONG> (Thumb, 668 bytes, Stack size 8 bytes, pump_sleeping.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = SleepManager &rArr; wake_up_watchdog &rArr; full_wake_up &rArr; Start_Stopper &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_value
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wake_up_watchdog
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_watchdog
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_server
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;half_wake_up_server
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wake_up_from_half_server
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wake_up_server
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pump_Manager
</UL>

<P><STRONG><a name="[5b]"></a>Status_GPIO_Config</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, error_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Status_GPIO_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1c9]"></a>escape_sleep</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, error_handle.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_monitor
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entrance_pressure_low
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaterLevelMonitor
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;outlet_pressure_high
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;outlet_pressure_low
</UL>

<P><STRONG><a name="[301]"></a>ErrorCheckOK</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, error_handle.o(.text), UNUSED)

<P><STRONG><a name="[1c5]"></a>reset_manual_controls_non_avf</STRONG> (Thumb, 238 bytes, Stack size 16 bytes, error_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 452<LI>Call Chain = reset_manual_controls_non_avf &rArr; NotifyButton &rArr; ExpireDateManager &rArr; Start_Stopper &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_fc_button
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlVisiable
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlEnable
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetButtonValue
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_manual_controls
</UL>

<P><STRONG><a name="[1c6]"></a>reset_manual_controls_avf</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, error_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 452<LI>Call Chain = reset_manual_controls_avf &rArr; NotifyButton &rArr; ExpireDateManager &rArr; Start_Stopper &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlVisiable
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlEnable
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetButtonValue
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_manual_controls
</UL>

<P><STRONG><a name="[1c7]"></a>reset_manual_controls</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, error_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 468<LI>Call Chain = reset_manual_controls &rArr; reset_manual_controls_avf &rArr; NotifyButton &rArr; ExpireDateManager &rArr; Start_Stopper &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_manual_controls_avf
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_manual_controls_non_avf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_monitor
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;manual_screen_monitor
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_error
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entrance_pressure_low
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;water_level_low
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;outlet_pressure_restore_from_high
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;outlet_pressure_high
</UL>

<P><STRONG><a name="[1c8]"></a>outlet_pressure_low</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, error_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = outlet_pressure_low &rArr; Start_Stopper &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Stopper
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;escape_sleep
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_monitor
</UL>

<P><STRONG><a name="[1ca]"></a>outlet_pressure_high</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, error_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = outlet_pressure_high &rArr; reset_manual_controls &rArr; reset_manual_controls_avf &rArr; NotifyButton &rArr; ExpireDateManager &rArr; Start_Stopper &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Stopper
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_manual_controls
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;escape_sleep
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_monitor
</UL>

<P><STRONG><a name="[1c2]"></a>switch_value</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, error_handle.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TryToRestoreSysRunning
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepManager
</UL>

<P><STRONG><a name="[1cb]"></a>TryToRestoreSysRunning</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, error_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = TryToRestoreSysRunning &rArr; start_mod_1_2 &rArr; FallAsleep &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_mod_1_2
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIDParament_Init
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_task_scheduler
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshButtons
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_value
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_monitor
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entrance_pressure_restore_from_low
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaterLevelMonitor
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;outlet_pressure_restore_from_high
</UL>

<P><STRONG><a name="[1cc]"></a>outlet_pressure_restore_from_high</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, error_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = outlet_pressure_restore_from_high &rArr; reset_manual_controls &rArr; reset_manual_controls_avf &rArr; NotifyButton &rArr; ExpireDateManager &rArr; Start_Stopper &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TryToRestoreSysRunning
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_manual_controls
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_monitor
</UL>

<P><STRONG><a name="[1cd]"></a>water_level_event</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, error_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = water_level_event &rArr; __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaterLevelMonitor
</UL>

<P><STRONG><a name="[1ce]"></a>WaterLevelMonitor</STRONG> (Thumb, 304 bytes, Stack size 8 bytes, error_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = WaterLevelMonitor &rArr; TryToRestoreSysRunning &rArr; start_mod_1_2 &rArr; FallAsleep &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Stopper
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;water_level_event
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TryToRestoreSysRunning
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;escape_sleep
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;water_level_low
</UL>

<P><STRONG><a name="[1cf]"></a>water_level_low</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, error_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = water_level_low &rArr; reset_manual_controls &rArr; reset_manual_controls_avf &rArr; NotifyButton &rArr; ExpireDateManager &rArr; Start_Stopper &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaterLevelMonitor
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_manual_controls
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_monitor
</UL>

<P><STRONG><a name="[1d0]"></a>entrance_pressure_low</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, error_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = entrance_pressure_low &rArr; reset_manual_controls &rArr; reset_manual_controls_avf &rArr; NotifyButton &rArr; ExpireDateManager &rArr; Start_Stopper &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Stopper
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_manual_controls
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;escape_sleep
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_monitor
</UL>

<P><STRONG><a name="[1d1]"></a>entrance_pressure_restore_from_low</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, error_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = entrance_pressure_restore_from_low &rArr; TryToRestoreSysRunning &rArr; start_mod_1_2 &rArr; FallAsleep &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_pump_entrance_pressure_check_startup_monitor
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TryToRestoreSysRunning
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_monitor
</UL>

<P><STRONG><a name="[1d2]"></a>entrance_pressure_low_dual</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, error_handle.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_pump_entrance_pressure_check_startup_monitor
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1d3]"></a>entrance_pressure_restore_from_low_dual</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, error_handle.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_pump_entrance_pressure_check_startup_monitor
</UL>

<P><STRONG><a name="[1d4]"></a>water_entrance_monitor</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, error_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = water_entrance_monitor &rArr; __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_monitor
</UL>

<P><STRONG><a name="[1d5]"></a>decompression_monitor</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, error_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = decompression_monitor &rArr; __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_monitor
</UL>

<P><STRONG><a name="[1d6]"></a>lack_of_water</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, error_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lack_of_water
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_monitor
</UL>

<P><STRONG><a name="[1d8]"></a>safety_protection</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, error_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = safety_protection
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_monitor
</UL>

<P><STRONG><a name="[1d9]"></a>fc_error</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, error_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fc_error
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_monitor
</UL>

<P><STRONG><a name="[1da]"></a>bomb_checker</STRONG> (Thumb, 548 bytes, Stack size 16 bytes, error_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bomb_checker &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_error
</UL>

<P><STRONG><a name="[1dc]"></a>load_time</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, error_handle.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;general_recorder
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_error_recorder
</UL>

<P><STRONG><a name="[1db]"></a>pump_error_recorder</STRONG> (Thumb, 128 bytes, Stack size 96 bytes, error_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBuzzer
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_error
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_time
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshErrorInfo
</UL>

<P><STRONG><a name="[1dd]"></a>ErrorsExist</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, error_handle.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Status_Scan
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshErrorInfo
</UL>

<P><STRONG><a name="[6e]"></a>RefreshErrorInfo</STRONG> (Thumb, 526 bytes, Stack size 96 bytes, error_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlVisiable
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorsExist
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_error_recorder
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Stopper
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_monitor
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_ui_sys_variables
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;full_wake_up
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wake_up
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;half_wake_up_server
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wake_up_from_half_server
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wake_up_server
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShortCutToSleep
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FallAsleep
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_up_server
</UL>

<P><STRONG><a name="[1de]"></a>update_ui_sys_variables</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, error_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = update_ui_sys_variables &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshButtons
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshErrorInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_error
</UL>

<P><STRONG><a name="[1df]"></a>sys_restart</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, error_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = sys_restart &rArr; start_mod_1_2 &rArr; FallAsleep &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_mod_1_2
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIDParament_Init
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_task_scheduler
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshButtons
</UL>
<BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_error
</UL>

<P><STRONG><a name="[1e0]"></a>fc_pump1_restart</STRONG> (Thumb, 348 bytes, Stack size 8 bytes, error_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = fc_pump1_restart &rArr; Set_FC_StartValue &rArr; Control_FC &rArr; UpdatePumpFreq &rArr; UpdateDac &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_to_fc
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_frequency
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_FC_StartValue
</UL>
<BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_error
</UL>

<P><STRONG><a name="[1e1]"></a>pump_error</STRONG> (Thumb, 374 bytes, Stack size 16 bytes, error_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 484<LI>Call Chain = pump_error &rArr; reset_manual_controls &rArr; reset_manual_controls_avf &rArr; NotifyButton &rArr; ExpireDateManager &rArr; Start_Stopper &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlVisiable
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fc_pump1_restart
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_restart
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_ui_sys_variables
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bomb_checker
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_manual_controls
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseSparePump
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump6_error
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump5_error
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump4_error
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump3_error
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump2_error
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump1_error
</UL>

<P><STRONG><a name="[1e2]"></a>pump1_error</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, error_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = pump1_error &rArr; pump_error &rArr; reset_manual_controls &rArr; reset_manual_controls_avf &rArr; NotifyButton &rArr; ExpireDateManager &rArr; Start_Stopper &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_error
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_monitor
</UL>

<P><STRONG><a name="[1e3]"></a>pump2_error</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, error_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = pump2_error &rArr; pump_error &rArr; reset_manual_controls &rArr; reset_manual_controls_avf &rArr; NotifyButton &rArr; ExpireDateManager &rArr; Start_Stopper &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_error
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_monitor
</UL>

<P><STRONG><a name="[1e4]"></a>pump3_error</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, error_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = pump3_error &rArr; pump_error &rArr; reset_manual_controls &rArr; reset_manual_controls_avf &rArr; NotifyButton &rArr; ExpireDateManager &rArr; Start_Stopper &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_error
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_monitor
</UL>

<P><STRONG><a name="[1e5]"></a>pump4_error</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, error_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = pump4_error &rArr; pump_error &rArr; reset_manual_controls &rArr; reset_manual_controls_avf &rArr; NotifyButton &rArr; ExpireDateManager &rArr; Start_Stopper &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_error
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_monitor
</UL>

<P><STRONG><a name="[1e6]"></a>pump5_error</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, error_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = pump5_error &rArr; pump_error &rArr; reset_manual_controls &rArr; reset_manual_controls_avf &rArr; NotifyButton &rArr; ExpireDateManager &rArr; Start_Stopper &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_error
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_monitor
</UL>

<P><STRONG><a name="[1e7]"></a>pump6_error</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, error_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = pump6_error &rArr; pump_error &rArr; reset_manual_controls &rArr; reset_manual_controls_avf &rArr; NotifyButton &rArr; ExpireDateManager &rArr; Start_Stopper &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_error
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_monitor
</UL>

<P><STRONG><a name="[1e8]"></a>StartStopResponsor</STRONG> (Thumb, 542 bytes, Stack size 8 bytes, error_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = StartStopResponsor &rArr; start_mod_1_2 &rArr; FallAsleep &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_mod_1_2
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTargetPressure
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIDParament_Init
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PidSetTargetPressure
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_task_scheduler
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadTargetPressure
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTargetPressure
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Stopper
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshButtons
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EscapeSleeper
</UL>
<BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remote_start_stop
</UL>

<P><STRONG><a name="[1e9]"></a>remote_start_stop</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, error_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = remote_start_stop &rArr; StartStopResponsor &rArr; start_mod_1_2 &rArr; FallAsleep &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStopResponsor
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_monitor
</UL>

<P><STRONG><a name="[1ea]"></a>no_running</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, error_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = no_running
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_monitor
</UL>

<P><STRONG><a name="[1eb]"></a>general_recorder</STRONG> (Thumb, 244 bytes, Stack size 40 bytes, error_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = general_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshButtons
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_error
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_time
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_monitor
</UL>

<P><STRONG><a name="[8f]"></a>show_an_err_record</STRONG> (Thumb, 134 bytes, Stack size 80 bytes, error_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = show_an_err_record &rArr; SetTextValue &rArr; SendStrings &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_err_record
</UL>

<P><STRONG><a name="[1ec]"></a>manual_screen_monitor</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, error_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = manual_screen_monitor &rArr; reset_manual_controls &rArr; reset_manual_controls_avf &rArr; NotifyButton &rArr; ExpireDateManager &rArr; Start_Stopper &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_manual_controls
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_monitor
</UL>

<P><STRONG><a name="[1ed]"></a>over_heat_error</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, error_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = over_heat_error
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_monitor
</UL>

<P><STRONG><a name="[1ee]"></a>event_monitor</STRONG> (Thumb, 1592 bytes, Stack size 64 bytes, error_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = event_monitor &rArr; pump6_error &rArr; pump_error &rArr; reset_manual_controls &rArr; reset_manual_controls_avf &rArr; NotifyButton &rArr; ExpireDateManager &rArr; Start_Stopper &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Stopper
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlVisiable
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshButtons
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_pump_entrance_pressure_check_startup_monitor
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshErrorInfo
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;over_heat_error
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;manual_screen_monitor
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;general_recorder
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;no_running
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remote_start_stop
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump6_error
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump5_error
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump4_error
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump3_error
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump2_error
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump1_error
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fc_error
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;safety_protection
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lack_of_water
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decompression_monitor
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;water_entrance_monitor
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entrance_pressure_restore_from_low
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entrance_pressure_low
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;water_level_low
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;outlet_pressure_restore_from_high
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TryToRestoreSysRunning
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;outlet_pressure_high
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;outlet_pressure_low
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_manual_controls
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;escape_sleep
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Status_Scan
</UL>

<P><STRONG><a name="[1ef]"></a>show_fatal_error</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, error_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = show_fatal_error &rArr; ShowMessage &rArr; SetTextValue &rArr; SendStrings &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMessage
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlForeColor
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlVisiable
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlEnable
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Status_Scan
</UL>

<P><STRONG><a name="[7d]"></a>Status_Scan</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, error_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 564<LI>Call Chain = Status_Scan &rArr; event_monitor &rArr; pump6_error &rArr; pump_error &rArr; reset_manual_controls &rArr; reset_manual_controls_avf &rArr; NotifyButton &rArr; ExpireDateManager &rArr; Start_Stopper &rArr; RefreshErrorInfo &rArr; pump_error_recorder &rArr; save_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBuzzer
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_fatal_error
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_monitor
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorsExist
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ea]"></a>clear_error</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, error_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = clear_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearErrorMsg
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactorySettings
</UL>

<P><STRONG><a name="[140]"></a>ClearErrorMsg</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, error_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = ClearErrorMsg &rArr; clear_error &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_error
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
</UL>

<P><STRONG><a name="[62]"></a>IWDG_Config</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, error_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IWDG_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_WriteAccessCmd
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_SetReload
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_SetPrescaler
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2b1]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration2
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration1
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupts_Config2
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupts_Config1
</UL>

<P><STRONG><a name="[2b2]"></a>NVIC_Init</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, misc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timerx_Init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration2
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration1
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupts_Config2
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupts_Config1
</UL>

<P><STRONG><a name="[302]"></a>NVIC_SetVectorTable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[303]"></a>NVIC_SystemLPConfig</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[293]"></a>SysTick_CLKSourceConfig</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, misc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systicket_init
</UL>

<P><STRONG><a name="[1f4]"></a>ADC_DeInit</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_Configuration
</UL>

<P><STRONG><a name="[2b7]"></a>ADC_Init</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ADC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_Configuration
</UL>

<P><STRONG><a name="[304]"></a>ADC_StructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[2ba]"></a>ADC_Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_Configuration
</UL>

<P><STRONG><a name="[2b9]"></a>ADC_DMACmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_Configuration
</UL>

<P><STRONG><a name="[305]"></a>ADC_ITConfig</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[2bb]"></a>ADC_ResetCalibration</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_Configuration
</UL>

<P><STRONG><a name="[2bc]"></a>ADC_GetResetCalibrationStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_Configuration
</UL>

<P><STRONG><a name="[2bd]"></a>ADC_StartCalibration</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_Configuration
</UL>

<P><STRONG><a name="[2be]"></a>ADC_GetCalibrationStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_Configuration
</UL>

<P><STRONG><a name="[109]"></a>ADC_SoftwareStartConvCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RealtimeMeasurement
</UL>

<P><STRONG><a name="[306]"></a>ADC_GetSoftwareStartConvStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[307]"></a>ADC_DiscModeChannelCountConfig</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[308]"></a>ADC_DiscModeCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[2b8]"></a>ADC_RegularChannelConfig</STRONG> (Thumb, 184 bytes, Stack size 20 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ADC_RegularChannelConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_Configuration
</UL>

<P><STRONG><a name="[309]"></a>ADC_ExternalTrigConvCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[30a]"></a>ADC_GetConversionValue</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[30b]"></a>ADC_GetDualModeConversionValue</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[30c]"></a>ADC_AutoInjectedConvCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[30d]"></a>ADC_InjectedDiscModeCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[30e]"></a>ADC_ExternalTrigInjectedConvConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[30f]"></a>ADC_ExternalTrigInjectedConvCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[310]"></a>ADC_SoftwareStartInjectedConvCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[311]"></a>ADC_GetSoftwareStartInjectedConvCmdStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[312]"></a>ADC_InjectedChannelConfig</STRONG> (Thumb, 130 bytes, Stack size 20 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[313]"></a>ADC_InjectedSequencerLengthConfig</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[314]"></a>ADC_SetInjectedOffset</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[315]"></a>ADC_GetInjectedConversionValue</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[316]"></a>ADC_AnalogWatchdogCmd</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[317]"></a>ADC_AnalogWatchdogThresholdsConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[318]"></a>ADC_AnalogWatchdogSingleChannelConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[319]"></a>ADC_TempSensorVrefintCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[10b]"></a>ADC_GetFlagStatus</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RealtimeMeasurement
</UL>

<P><STRONG><a name="[31a]"></a>ADC_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[31b]"></a>ADC_GetITStatus</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[31c]"></a>ADC_ClearITPendingBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_adc.o(.text), UNUSED)

<P><STRONG><a name="[1f6]"></a>DAC_DeInit</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32f10x_dac.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>

<P><STRONG><a name="[2bf]"></a>DAC_Init</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, stm32f10x_dac.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DAC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dac_Config
</UL>

<P><STRONG><a name="[31d]"></a>DAC_StructInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_dac.o(.text), UNUSED)

<P><STRONG><a name="[2c0]"></a>DAC_Cmd</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, stm32f10x_dac.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dac_Config
</UL>

<P><STRONG><a name="[31e]"></a>DAC_DMACmd</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, stm32f10x_dac.o(.text), UNUSED)

<P><STRONG><a name="[31f]"></a>DAC_SoftwareTriggerCmd</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f10x_dac.o(.text), UNUSED)

<P><STRONG><a name="[320]"></a>DAC_DualSoftwareTriggerCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f10x_dac.o(.text), UNUSED)

<P><STRONG><a name="[321]"></a>DAC_WaveGenerationCmd</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, stm32f10x_dac.o(.text), UNUSED)

<P><STRONG><a name="[165]"></a>DAC_SetChannel1Data</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_dac.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Manual_FC
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dac_Config
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_FC
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateDac
</UL>

<P><STRONG><a name="[166]"></a>DAC_SetChannel2Data</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_dac.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dac_Config
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateDac
</UL>

<P><STRONG><a name="[322]"></a>DAC_SetDualChannelData</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, stm32f10x_dac.o(.text), UNUSED)

<P><STRONG><a name="[323]"></a>DAC_GetDataOutputValue</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_dac.o(.text), UNUSED)

<P><STRONG><a name="[2ae]"></a>DMA_DeInit</STRONG> (Thumb, 320 bytes, Stack size 0 bytes, stm32f10x_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Configuration
</UL>

<P><STRONG><a name="[2af]"></a>DMA_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f10x_dma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Configuration
</UL>

<P><STRONG><a name="[324]"></a>DMA_StructInit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_dma.o(.text), UNUSED)

<P><STRONG><a name="[10a]"></a>DMA_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RealtimeMeasurement
</UL>

<P><STRONG><a name="[325]"></a>DMA_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_dma.o(.text), UNUSED)

<P><STRONG><a name="[326]"></a>DMA_SetCurrDataCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_dma.o(.text), UNUSED)

<P><STRONG><a name="[327]"></a>DMA_GetCurrDataCounter</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_dma.o(.text), UNUSED)

<P><STRONG><a name="[328]"></a>DMA_GetFlagStatus</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f10x_dma.o(.text), UNUSED)

<P><STRONG><a name="[329]"></a>DMA_ClearFlag</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_dma.o(.text), UNUSED)

<P><STRONG><a name="[32a]"></a>DMA_GetITStatus</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f10x_dma.o(.text), UNUSED)

<P><STRONG><a name="[32b]"></a>DMA_ClearITPendingBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_dma.o(.text), UNUSED)

<P><STRONG><a name="[297]"></a>FLASH_SetLatency</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_System_Clocks
</UL>

<P><STRONG><a name="[32c]"></a>FLASH_HalfCycleAccessCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[296]"></a>FLASH_PrefetchBufferCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_System_Clocks
</UL>

<P><STRONG><a name="[2c4]"></a>FLASH_Unlock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Write
</UL>

<P><STRONG><a name="[32d]"></a>FLASH_UnlockBank1</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[2c5]"></a>FLASH_Lock</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Write
</UL>

<P><STRONG><a name="[32e]"></a>FLASH_LockBank1</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[1f9]"></a>FLASH_GetBank1Status</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastBank1Operation
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[1f8]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, stm32f10x_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetBank1Status
</UL>
<BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_UserOptionByteConfig
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ReadOutProtection
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EnableWriteProtection
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramOptionByteData
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWord
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseOptionBytes
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseAllPages
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>

<P><STRONG><a name="[1fa]"></a>FLASH_ErasePage</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, stm32f10x_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FLASH_ErasePage &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Write
</UL>

<P><STRONG><a name="[1fb]"></a>FLASH_EraseAllPages</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, stm32f10x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[1fc]"></a>FLASH_WaitForLastBank1Operation</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, stm32f10x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetBank1Status
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseAllBank1Pages
</UL>

<P><STRONG><a name="[1fd]"></a>FLASH_EraseAllBank1Pages</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, stm32f10x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastBank1Operation
</UL>

<P><STRONG><a name="[1ff]"></a>FLASH_GetReadOutProtectionStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseOptionBytes
</UL>

<P><STRONG><a name="[1fe]"></a>FLASH_EraseOptionBytes</STRONG> (Thumb, 152 bytes, Stack size 12 bytes, stm32f10x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetReadOutProtectionStatus
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[200]"></a>FLASH_ProgramWord</STRONG> (Thumb, 96 bytes, Stack size 20 bytes, stm32f10x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[201]"></a>FLASH_ProgramHalfWord</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32f10x_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Write_NoCheck
</UL>

<P><STRONG><a name="[202]"></a>FLASH_ProgramOptionByteData</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, stm32f10x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[203]"></a>FLASH_EnableWriteProtection</STRONG> (Thumb, 208 bytes, Stack size 28 bytes, stm32f10x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[204]"></a>FLASH_ReadOutProtection</STRONG> (Thumb, 156 bytes, Stack size 12 bytes, stm32f10x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[205]"></a>FLASH_UserOptionByteConfig</STRONG> (Thumb, 88 bytes, Stack size 20 bytes, stm32f10x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[32f]"></a>FLASH_GetUserOptionByte</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[330]"></a>FLASH_GetWriteProtectionOptionByte</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[331]"></a>FLASH_GetPrefetchBufferStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[332]"></a>FLASH_ITConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[333]"></a>FLASH_GetFlagStatus</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[334]"></a>FLASH_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[335]"></a>FLASH_GetStatus</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[206]"></a>GPIO_DeInit</STRONG> (Thumb, 172 bytes, Stack size 8 bytes, stm32f10x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[207]"></a>GPIO_AFIODeInit</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32f10x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[1c4]"></a>GPIO_Init</STRONG> (Thumb, 274 bytes, Stack size 24 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Config
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Config
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Status_GPIO_Config
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Relay_GPIO_Config
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_GPIO_Config
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartInit
</UL>

<P><STRONG><a name="[336]"></a>GPIO_StructInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1d7]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;no_running
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remote_start_stop
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump6_error
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump5_error
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump4_error
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump3_error
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump2_error
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump1_error
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fc_error
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;safety_protection
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lack_of_water
</UL>

<P><STRONG><a name="[337]"></a>GPIO_ReadInputData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[338]"></a>GPIO_ReadOutputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[339]"></a>GPIO_ReadOutputData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[2a2]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
</UL>

<P><STRONG><a name="[33a]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[33b]"></a>GPIO_WriteBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[33c]"></a>GPIO_Write</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[33d]"></a>GPIO_PinLockConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[33e]"></a>GPIO_EventOutputConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[33f]"></a>GPIO_EventOutputCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[340]"></a>GPIO_PinRemapConfig</STRONG> (Thumb, 138 bytes, Stack size 20 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[341]"></a>GPIO_EXTILineConfig</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[342]"></a>GPIO_ETH_MediaInterfaceConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1f0]"></a>IWDG_WriteAccessCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Config
</UL>

<P><STRONG><a name="[1f1]"></a>IWDG_SetPrescaler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Config
</UL>

<P><STRONG><a name="[1f2]"></a>IWDG_SetReload</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Config
</UL>

<P><STRONG><a name="[64]"></a>IWDG_ReloadCounter</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyReadFlash
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debugger_clean
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadAllSettingsInFlash
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Config
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_error
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modbus_cmd_processor
</UL>

<P><STRONG><a name="[1f3]"></a>IWDG_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Config
</UL>

<P><STRONG><a name="[343]"></a>IWDG_GetFlagStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(.text), UNUSED)

<P><STRONG><a name="[294]"></a>RCC_DeInit</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_System_Clocks
</UL>

<P><STRONG><a name="[344]"></a>RCC_HSEConfig</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[5e]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_System_Clocks
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStartUp
</UL>

<P><STRONG><a name="[208]"></a>RCC_WaitForHSEStartUp</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, stm32f10x_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
</UL>

<P><STRONG><a name="[345]"></a>RCC_AdjustHSICalibrationValue</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[295]"></a>RCC_HSICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_System_Clocks
</UL>

<P><STRONG><a name="[29b]"></a>RCC_PLLConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_System_Clocks
</UL>

<P><STRONG><a name="[29c]"></a>RCC_PLLCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_System_Clocks
</UL>

<P><STRONG><a name="[29d]"></a>RCC_SYSCLKConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_System_Clocks
</UL>

<P><STRONG><a name="[29e]"></a>RCC_GetSYSCLKSource</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_System_Clocks
</UL>

<P><STRONG><a name="[298]"></a>RCC_HCLKConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_System_Clocks
</UL>

<P><STRONG><a name="[29a]"></a>RCC_PCLK1Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_System_Clocks
</UL>

<P><STRONG><a name="[299]"></a>RCC_PCLK2Config</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_System_Clocks
</UL>

<P><STRONG><a name="[346]"></a>RCC_ITConfig</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[347]"></a>RCC_USBCLKConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[2a0]"></a>RCC_ADCCLKConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[348]"></a>RCC_LSEConfig</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[349]"></a>RCC_LSICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[34a]"></a>RCC_RTCCLKConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[34b]"></a>RCC_RTCCLKCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[21c]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 192 bytes, Stack size 12 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[2a1]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[1c3]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Config
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Config
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Status_GPIO_Config
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Relay_GPIO_Config
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_GPIO_Config
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartInit
</UL>

<P><STRONG><a name="[29f]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Config
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timerx_Init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[1f5]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_AFIODeInit
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DeInit
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
</UL>

<P><STRONG><a name="[1f7]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_DeInit
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
</UL>

<P><STRONG><a name="[34c]"></a>RCC_BackupResetCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[34d]"></a>RCC_ClockSecuritySystemCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[34e]"></a>RCC_MCOConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[61]"></a>RCC_ClearFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[34f]"></a>RCC_GetITStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[350]"></a>RCC_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[209]"></a>TIM_DeInit</STRONG> (Thumb, 424 bytes, Stack size 8 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[2a3]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timerx_Init
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_PWM_Configuration
</UL>

<P><STRONG><a name="[2a4]"></a>TIM_OC1Init</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC1Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_PWM_Configuration
</UL>

<P><STRONG><a name="[2a6]"></a>TIM_OC2Init</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC2Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_PWM_Configuration
</UL>

<P><STRONG><a name="[2a8]"></a>TIM_OC3Init</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC3Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_PWM_Configuration
</UL>

<P><STRONG><a name="[2aa]"></a>TIM_OC4Init</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC4Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_PWM_Configuration
</UL>

<P><STRONG><a name="[212]"></a>TIM_SetIC4Prescaler</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[210]"></a>TIM_SetIC3Prescaler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[20e]"></a>TIM_SetIC2Prescaler</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[20c]"></a>TIM_SetIC1Prescaler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[20a]"></a>TIM_ICInit</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC1Prescaler
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC2Prescaler
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC3Prescaler
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC4Prescaler
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI3_Config
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI4_Config
</UL>

<P><STRONG><a name="[213]"></a>TIM_PWMIConfig</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC1Prescaler
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC2Prescaler
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
</UL>

<P><STRONG><a name="[351]"></a>TIM_BDTRConfig</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[352]"></a>TIM_TimeBaseStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[353]"></a>TIM_OCStructInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[354]"></a>TIM_ICStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[355]"></a>TIM_BDTRStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[2ad]"></a>TIM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timerx_Init
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_PWM_Configuration
</UL>

<P><STRONG><a name="[356]"></a>TIM_CtrlPWMOutputs</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[2c1]"></a>TIM_ITConfig</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timerx_Init
</UL>

<P><STRONG><a name="[357]"></a>TIM_GenerateEvent</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[358]"></a>TIM_DMAConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[359]"></a>TIM_DMACmd</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[35a]"></a>TIM_InternalClockConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[215]"></a>TIM_SelectInputTrigger</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITRxExternalClockConfig
</UL>

<P><STRONG><a name="[214]"></a>TIM_ITRxExternalClockConfig</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectInputTrigger
</UL>

<P><STRONG><a name="[216]"></a>TIM_TIxExternalClockConfig</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectInputTrigger
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
</UL>

<P><STRONG><a name="[218]"></a>TIM_ETRConfig</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRClockMode2Config
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRClockMode1Config
</UL>

<P><STRONG><a name="[217]"></a>TIM_ETRClockMode1Config</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRConfig
</UL>

<P><STRONG><a name="[219]"></a>TIM_ETRClockMode2Config</STRONG> (Thumb, 32 bytes, Stack size 20 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRConfig
</UL>

<P><STRONG><a name="[35b]"></a>TIM_PrescalerConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[35c]"></a>TIM_CounterModeConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[35d]"></a>TIM_EncoderInterfaceConfig</STRONG> (Thumb, 62 bytes, Stack size 20 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[35e]"></a>TIM_ForcedOC1Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[35f]"></a>TIM_ForcedOC2Config</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[360]"></a>TIM_ForcedOC3Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[361]"></a>TIM_ForcedOC4Config</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[2ac]"></a>TIM_ARRPreloadConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_PWM_Configuration
</UL>

<P><STRONG><a name="[362]"></a>TIM_SelectCOM</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[363]"></a>TIM_SelectCCDMA</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[364]"></a>TIM_CCPreloadControl</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[2a5]"></a>TIM_OC1PreloadConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_PWM_Configuration
</UL>

<P><STRONG><a name="[2a7]"></a>TIM_OC2PreloadConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_PWM_Configuration
</UL>

<P><STRONG><a name="[2a9]"></a>TIM_OC3PreloadConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_PWM_Configuration
</UL>

<P><STRONG><a name="[2ab]"></a>TIM_OC4PreloadConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_PWM_Configuration
</UL>

<P><STRONG><a name="[365]"></a>TIM_OC1FastConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[366]"></a>TIM_OC2FastConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[367]"></a>TIM_OC3FastConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[368]"></a>TIM_OC4FastConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[369]"></a>TIM_ClearOC1Ref</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[36a]"></a>TIM_ClearOC2Ref</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[36b]"></a>TIM_ClearOC3Ref</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[36c]"></a>TIM_ClearOC4Ref</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[36d]"></a>TIM_OC1PolarityConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[36e]"></a>TIM_OC1NPolarityConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[36f]"></a>TIM_OC2PolarityConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[370]"></a>TIM_OC2NPolarityConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[371]"></a>TIM_OC3PolarityConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[372]"></a>TIM_OC3NPolarityConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[373]"></a>TIM_OC4PolarityConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[374]"></a>TIM_CCxCmd</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[375]"></a>TIM_CCxNCmd</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[376]"></a>TIM_SelectOCxM</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[377]"></a>TIM_UpdateDisableConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[378]"></a>TIM_UpdateRequestConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[379]"></a>TIM_SelectHallSensor</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[37a]"></a>TIM_SelectOnePulseMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[37b]"></a>TIM_SelectOutputTrigger</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[37c]"></a>TIM_SelectSlaveMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[37d]"></a>TIM_SelectMasterSlaveMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[37e]"></a>TIM_SetCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[37f]"></a>TIM_SetAutoreload</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[380]"></a>TIM_SetCompare1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[381]"></a>TIM_SetCompare2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[382]"></a>TIM_SetCompare3</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[383]"></a>TIM_SetCompare4</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[384]"></a>TIM_SetClockDivision</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[385]"></a>TIM_GetCapture1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[386]"></a>TIM_GetCapture2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[387]"></a>TIM_GetCapture3</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[388]"></a>TIM_GetCapture4</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[389]"></a>TIM_GetCounter</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[38a]"></a>TIM_GetPrescaler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[38b]"></a>TIM_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[38c]"></a>TIM_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[291]"></a>TIM_GetITStatus</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[292]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[21a]"></a>USART_DeInit</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, stm32f10x_usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartInit
</UL>

<P><STRONG><a name="[21b]"></a>USART_Init</STRONG> (Thumb, 210 bytes, Stack size 56 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Config
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Config
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartInit
</UL>

<P><STRONG><a name="[38d]"></a>USART_StructInit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[38e]"></a>USART_ClockInit</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[38f]"></a>USART_ClockStructInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[28a]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Config
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Config
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartInit
</UL>

<P><STRONG><a name="[289]"></a>USART_ITConfig</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Config
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Config
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartInit
</UL>

<P><STRONG><a name="[390]"></a>USART_DMACmd</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[391]"></a>USART_SetAddress</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[392]"></a>USART_WakeUpConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[393]"></a>USART_ReceiverWakeUpCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[394]"></a>USART_LINBreakDetectLengthConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[395]"></a>USART_LINCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[28b]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModeBusSendChar
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[28e]"></a>USART_ReceiveData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[396]"></a>USART_SendBreak</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[397]"></a>USART_SetGuardTime</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[398]"></a>USART_SetPrescaler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[399]"></a>USART_SmartCardCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[39a]"></a>USART_SmartCardNACKCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[39b]"></a>USART_HalfDuplexCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[39c]"></a>USART_OverSampling8Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[39d]"></a>USART_OneBitMethodCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[39e]"></a>USART_IrDAConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[39f]"></a>USART_IrDACmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[28c]"></a>USART_GetFlagStatus</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModeBusSendChar
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[3a0]"></a>USART_ClearFlag</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[28d]"></a>USART_GetITStatus</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[3a1]"></a>USART_ClearITPendingBit</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[45]"></a>SystemInit</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, system_stm32f10x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(.text)
</UL>
<P><STRONG><a name="[3a2]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, system_stm32f10x.o(.text), UNUSED)

<P><STRONG><a name="[5d]"></a>queue_reset</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cmd_queue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[290]"></a>queue_push</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, cmd_queue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[6b]"></a>queue_find_cmd</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, cmd_queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = queue_find_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_size
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_pop
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3a3]"></a>DelayMS</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, hmi_driver.o(.text), UNUSED)

<P><STRONG><a name="[149]"></a>SendStrings</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, hmi_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SendStrings &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyTouchXY
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatchSetText
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Record_Add
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisText
</UL>

<P><STRONG><a name="[222]"></a>SendStringsWithSplitter</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Record_Add_Byte
</UL>

<P><STRONG><a name="[223]"></a>SendNU8</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, hmi_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SendNU8 &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteUserFlash
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HistoryGraph_SetValueInt8
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphChannelDataAdd
</UL>

<P><STRONG><a name="[224]"></a>SendNU16</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>
<BR>[Called By]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HistoryGraph_SetValueInt16
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BcolorConDots
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FcolorConDots
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BcolorConOffsetDots
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FcolorConOffsetDots
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ConSpaceDots
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ConDots
</UL>

<P><STRONG><a name="[225]"></a>SetHandShake</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[226]"></a>SetFcolor</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[227]"></a>SetBcolor</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[228]"></a>ColorPicker</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[229]"></a>GUI_CleanScreen</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[22a]"></a>SetTextSpace</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[22b]"></a>SetFont_Region</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[22c]"></a>SetFilterColor</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[22d]"></a>DisText</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendStrings
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[22e]"></a>DisCursor</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[22f]"></a>DisFull_Image</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[230]"></a>DisArea_Image</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[231]"></a>DisCut_Image</STRONG> (Thumb, 174 bytes, Stack size 40 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[232]"></a>DisFlashImage</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[233]"></a>GUI_Dot</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[234]"></a>GUI_Line</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[235]"></a>GUI_ConDots</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendNU16
</UL>

<P><STRONG><a name="[236]"></a>GUI_ConSpaceDots</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendNU16
</UL>

<P><STRONG><a name="[237]"></a>GUI_FcolorConOffsetDots</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendNU16
</UL>

<P><STRONG><a name="[238]"></a>GUI_BcolorConOffsetDots</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendNU16
</UL>

<P><STRONG><a name="[b7]"></a>SetPowerSaving</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, hmi_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SetPowerSaving &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_SCREEN_SETTING
</UL>

<P><STRONG><a name="[239]"></a>GUI_FcolorConDots</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendNU16
</UL>

<P><STRONG><a name="[23a]"></a>GUI_BcolorConDots</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendNU16
</UL>

<P><STRONG><a name="[23b]"></a>GUI_Circle</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[23c]"></a>GUI_CircleFill</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[23d]"></a>GUI_Arc</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[23e]"></a>GUI_Rectangle</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[23f]"></a>GUI_RectangleFill</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[240]"></a>GUI_Ellipse</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[241]"></a>GUI_EllipseFill</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[242]"></a>SetBackLight</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[12a]"></a>SetBuzzer</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, hmi_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetBuzzer &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyTimer
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Status_Scan
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_error_recorder
</UL>

<P><STRONG><a name="[243]"></a>GUI_AreaInycolor</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[244]"></a>SetTouchPaneOption</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[245]"></a>CalibrateTouchPane</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[246]"></a>TestTouchPane</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[247]"></a>LockDeviceConfig</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[248]"></a>UnlockDeviceConfig</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[249]"></a>SetCommBps</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[24a]"></a>WriteLayer</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[24b]"></a>DisplyLayer</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[24c]"></a>CopyLayer</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[24d]"></a>ClearLayer</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[24e]"></a>GUI_DispRTC</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[cf]"></a>WriteUserFlash</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, hmi_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = WriteUserFlash &rArr; SendNU8 &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendNU8
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSettingsToFlash
</UL>

<P><STRONG><a name="[24f]"></a>ReadUserFlash</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[250]"></a>GetScreen</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[113]"></a>SetScreen</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, hmi_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetScreen &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyText
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMessage
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinMonitor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RealtimeMeasurement
</UL>

<P><STRONG><a name="[251]"></a>SetScreenUpdateEnable</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[252]"></a>SetControlFocus</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[b9]"></a>SetControlVisiable</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, hmi_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SetControlVisiable &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_mod_1_2
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_controller
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyText
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetVisibiltyBumpTemp
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetButtonUsability
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_button_visible
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_controls
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExpireDateManager
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_POWER_UP_SETTING
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_PUMP_GROUPING
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshErrorInfo
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitVisibility
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_fatal_error
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_monitor
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_error
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_manual_controls_avf
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_manual_controls_non_avf
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_server
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiSetSmallPumpOn
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cancel_a_pump
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_a_pump
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartAnFcPump
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pause
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_to_pf
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_to_fc
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_cmd
</UL>

<P><STRONG><a name="[c2]"></a>SetControlEnable</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, hmi_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SetControlEnable &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_controller
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyText
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetVisibiltyBumpTemp
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetButtonUsability
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_button_visible
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_controls
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_POWER_UP_SETTING
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitVisibility
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_fatal_error
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_manual_controls_avf
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_manual_controls_non_avf
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_cmd
</UL>

<P><STRONG><a name="[8c]"></a>SetButtonValue</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, hmi_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SetButtonValue &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinChecker
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_PID_SETTING
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_VALVE_CONTROL
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_POWER_UP_SETTING
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_SLEEP_SETTING
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_PUMP_SWITCH_CONDTION
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_ENTRANCE_SENSOR2
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_ENTRANCE_SENSOR0
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_ENTRANCE_SENSOR
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_OUTLET_SENSOR
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_PUMP_GROUPING
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_SCREEN_SETTING
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_pump_temp_setting
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_expire_date
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_manual_controls_avf
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_manual_controls_non_avf
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiSetSmallPumpOn
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_cmd
</UL>

<P><STRONG><a name="[50]"></a>SetTextValue</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, hmi_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SetTextValue &rArr; SendStrings &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendStrings
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_mod_1_2
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_FC_Zero
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearErrorMsg
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyText
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDateControls
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCurrentPassWord
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debugger_clean
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMessage
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinMonitor
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PidSetTargetPressure
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTargetPressure
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_an_err_record
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Stopper
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExpireDateManager
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadAllSettingsInFlash
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_PID_SETTING
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_VALVE_CONTROL1
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_VALVE_CONTROL
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_POWER_UP_SETTING
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_SLEEP_SETTING
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_PUMP_SWITCH_CONDTION
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_ENTRANCE_SENSOR2
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_ENTRANCE_SENSOR0
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_ENTRANCE_SENSOR
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_OUTLET_SENSOR
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_PUMP_GROUPING
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_SCREEN_SETTING
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_pump_temp_setting
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_expire_date
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_phone_nbr
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_company_name
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debugger
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshErrorInfo
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RealtimeMeasurement
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FatigueCancelMonitorAvf
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WarningTagManager
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_monitor
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;general_recorder
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_error_recorder
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_server
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShortCutToSleep
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FallAsleep
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseSparePump
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_small_pump
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;end_of_stopper_watchdog
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cancel_a_pump
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_a_pump
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartAnFcPump
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pause
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_to_pf
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_to_fc
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_frequency_for_pump
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_cmd
</UL>

<P><STRONG><a name="[253]"></a>SetTextInt32</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[254]"></a>SetTextFloat</STRONG> (Thumb, 140 bytes, Stack size 40 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[bd]"></a>SetProgressValue</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, hmi_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SetProgressValue &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_ENTRANCE_SENSOR0
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_cmd
</UL>

<P><STRONG><a name="[255]"></a>SetMeterValue</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[256]"></a>Set_picMeterValue</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[257]"></a>SetSliderValue</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[258]"></a>SetSelectorValue</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[259]"></a>GetControlValue</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[173]"></a>AnimationStart</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, hmi_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = AnimationStart &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_mod_1_2
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartAnFcPump
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_to_pf
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_to_fc
</UL>

<P><STRONG><a name="[176]"></a>AnimationStop</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, hmi_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = AnimationStop &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>
<BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_server
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cancel_a_pump
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_a_pump
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pause
</UL>

<P><STRONG><a name="[25a]"></a>AnimationPause</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[25b]"></a>AnimationPlayFrame</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[25c]"></a>AnimationPlayPrev</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[25d]"></a>AnimationPlayNext</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[25e]"></a>GraphChannelAdd</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[25f]"></a>GraphChannelDel</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[260]"></a>GraphChannelDataAdd</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendNU8
</UL>

<P><STRONG><a name="[142]"></a>GraphChannelDataClear</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, hmi_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GraphChannelDataClear &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
</UL>

<P><STRONG><a name="[261]"></a>GraphSetViewport</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[c9]"></a>BatchBegin</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, hmi_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BatchBegin &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseDataTC
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseSettingsInFlash
</UL>

<P><STRONG><a name="[ca]"></a>BatchSetButtonValue</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, hmi_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = BatchSetButtonValue &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseDataTC
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseSettingsInFlash
</UL>

<P><STRONG><a name="[262]"></a>BatchSetProgressValue</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[263]"></a>BatchSetSliderValue</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[264]"></a>BatchSetMeterValue</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[265]"></a>GetStringLen</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, hmi_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatchSetText
</UL>

<P><STRONG><a name="[cb]"></a>BatchSetText</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, hmi_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BatchSetText &rArr; SendStrings &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendStrings
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetStringLen
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseDataTC
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseSettingsInFlash
</UL>

<P><STRONG><a name="[266]"></a>BatchSetFrame</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[267]"></a>BatchSetVisible</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[268]"></a>BatchSetEnable</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[269]"></a>BatchEnd</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[26a]"></a>SeTimer</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[26b]"></a>StartTimer</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[26c]"></a>StopTimer</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[26d]"></a>PauseTimer</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[26e]"></a>SetControlBackColor</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[112]"></a>SetControlForeColor</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, hmi_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SetControlForeColor &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RealtimeMeasurement
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_fatal_error
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_cmd
</UL>

<P><STRONG><a name="[26f]"></a>ShowPopupMenu</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[270]"></a>ShowKeyboard</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[271]"></a>SetLanguage</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[272]"></a>FlashBeginSaveControl</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[273]"></a>FlashSaveControl</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[274]"></a>FlashEndSaveControl</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[275]"></a>FlashRestoreControl</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[276]"></a>HistoryGraph_SetValueInt8</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendNU8
</UL>

<P><STRONG><a name="[277]"></a>HistoryGraph_SetValueInt16</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendNU16
</UL>

<P><STRONG><a name="[278]"></a>HistoryGraph_SetValueInt32</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[279]"></a>HistoryGraph_SetValueFloat</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[27a]"></a>HistoryGraph_EnableSampling</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[27b]"></a>HistoryGraph_ShowChannel</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[27c]"></a>HistoryGraph_SetTimeLength</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[27d]"></a>HistoryGraph_SetTimeFullScreen</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[27e]"></a>HistoryGraph_SetTimeZoom</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[27f]"></a>Record_SetEvent</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[280]"></a>Record_ResetEvent</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[281]"></a>Record_Add</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendStrings
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[282]"></a>Record_Add_Byte</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendStringsWithSplitter
</UL>

<P><STRONG><a name="[283]"></a>Record_Clear</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[284]"></a>Record_SetOffset</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[285]"></a>Record_GetCount</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[7f]"></a>ReadRTC</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, hmi_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ReadRTC &rArr; SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[286]"></a>PlayMusic</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[287]"></a>ShowIcon</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, hmi_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[288]"></a>UartInit</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, hmi_user_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
</UL>

<P><STRONG><a name="[221]"></a>SendChar</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, hmi_user_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBuzzer
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendStrings
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphChannelDataClear
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetScreen
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlForeColor
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteUserFlash
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetProgressValue
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPowerSaving
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlVisiable
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlEnable
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetButtonValue
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatchSetText
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatchSetButtonValue
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatchBegin
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextValue
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRTC
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnimationStop
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnimationStart
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowIcon
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayMusic
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Record_GetCount
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Record_SetOffset
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Record_Clear
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Record_Add_Byte
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Record_Add
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Record_ResetEvent
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Record_SetEvent
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HistoryGraph_SetTimeZoom
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HistoryGraph_SetTimeFullScreen
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HistoryGraph_SetTimeLength
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HistoryGraph_ShowChannel
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HistoryGraph_EnableSampling
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HistoryGraph_SetValueFloat
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HistoryGraph_SetValueInt32
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HistoryGraph_SetValueInt16
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HistoryGraph_SetValueInt8
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashRestoreControl
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashEndSaveControl
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSaveControl
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashBeginSaveControl
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowKeyboard
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPopupMenu
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlBackColor
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PauseTimer
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopTimer
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartTimer
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeTimer
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatchEnd
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatchSetEnable
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatchSetVisible
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatchSetFrame
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatchSetMeterValue
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatchSetSliderValue
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatchSetProgressValue
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphSetViewport
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphChannelDataAdd
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphChannelDel
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphChannelAdd
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnimationPlayNext
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnimationPlayPrev
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnimationPlayFrame
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnimationPause
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetControlValue
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSelectorValue
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSliderValue
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_picMeterValue
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMeterValue
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextFloat
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextInt32
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlFocus
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetScreenUpdateEnable
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetScreen
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadUserFlash
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispRTC
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearLayer
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CopyLayer
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplyLayer
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteLayer
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCommBps
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnlockDeviceConfig
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LockDeviceConfig
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestTouchPane
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrateTouchPane
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTouchPaneOption
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AreaInycolor
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBackLight
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EllipseFill
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Ellipse
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectangleFill
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Rectangle
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Arc
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CircleFill
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Circle
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BcolorConDots
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FcolorConDots
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BcolorConOffsetDots
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FcolorConOffsetDots
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ConSpaceDots
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ConDots
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Line
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Dot
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisFlashImage
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisCut_Image
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisArea_Image
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisFull_Image
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisCursor
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisText
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFilterColor
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFont_Region
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTextSpace
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CleanScreen
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ColorPicker
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBcolor
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFcolor
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHandShake
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendNU16
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendNU8
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendStringsWithSplitter
</UL>

<P><STRONG><a name="[10]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>USART1_IRQHandler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, stm32f10x_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = USART1_IRQHandler &rArr; ModBusReceiver &rArr; modbus_cmd_processor &rArr; SendCommData &rArr; ModBusSendDataBlock &rArr; AddCRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModBusReceiver
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>USART2_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f10x_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART2_IRQHandler &rArr; USART_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_push
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM3_IRQHandler</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32f10x_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM3_IRQHandler &rArr; TIM_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>SysTick_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>delay_ms</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, ulitity.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReturnModBusCMD
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearErrorMsg
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyText
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDateControls
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetButtonUsability
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_button_visible
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_controls
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debugger_clean
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMessage
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_an_err_record
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExpireDateManager
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinChecker
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseData
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_PUMP_GROUPING
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_pump_temp_setting
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debugger
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshErrorInfo
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RealtimeMeasurement
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitVisibility
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_fatal_error
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_monitor
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;general_recorder
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_error_recorder
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;end_of_stopper_watchdog
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmdBack
</UL>

<P><STRONG><a name="[52]"></a>systicket_init</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, ulitity.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = systicket_init
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_CLKSourceConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[51]"></a>Set_System_Clocks</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, hw_config.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Set_System_Clocks &rArr; RCC_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PCLK2Config
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PCLK1Config
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HCLKConfig
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSYSCLKSource
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SYSCLKConfig
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLCmd
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLConfig
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSICmd
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_DeInit
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PrefetchBufferCmd
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SetLatency
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_All_Hardware
</UL>

<P><STRONG><a name="[58]"></a>RCC_Configuration</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, hw_config.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_Configuration
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ADCCLKConfig
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_All_Hardware
</UL>

<P><STRONG><a name="[59]"></a>GPIO_Configuration</STRONG> (Thumb, 248 bytes, Stack size 8 bytes, hw_config.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GPIO_Configuration &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_All_Hardware
</UL>

<P><STRONG><a name="[5a]"></a>TIM3_PWM_Configuration</STRONG> (Thumb, 200 bytes, Stack size 56 bytes, hw_config.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = TIM3_PWM_Configuration &rArr; TIM_OC4Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4PreloadConfig
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3PreloadConfig
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2PreloadConfig
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1PreloadConfig
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ARRPreloadConfig
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4Init
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3Init
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2Init
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1Init
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[167]"></a>UpdatePWM</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, hw_config.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdatePumpFreq
</UL>

<P><STRONG><a name="[67]"></a>DMA_Configuration</STRONG> (Thumb, 66 bytes, Stack size 48 bytes, hw_config.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = DMA_Configuration &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_All_Hardware
</UL>

<P><STRONG><a name="[2b0]"></a>Interrupts_Config1</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, hw_config.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupts_Config
</UL>

<P><STRONG><a name="[2b3]"></a>Interrupts_Config2</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, hw_config.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupts_Config
</UL>

<P><STRONG><a name="[2b4]"></a>Interrupts_Config</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hw_config.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupts_Config2
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interrupts_Config1
</UL>

<P><STRONG><a name="[2b5]"></a>Init_All_Hardware</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, hw_config.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_System_Clocks
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Configuration
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_Configuration
</UL>

<P><STRONG><a name="[2b6]"></a>Adc_GPIO_Config</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>

<P><STRONG><a name="[65]"></a>Adc_Configuration</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Adc_Configuration &rArr; ADC_RegularChannelConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RegularChannelConfig
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetCalibrationStatus
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StartCalibration
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetResetCalibrationStatus
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ResetCalibration
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMACmd
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_All_Hardware
</UL>

<P><STRONG><a name="[66]"></a>Dac_Config</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, dac.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Dac_Config &rArr; DAC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_Cmd
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_Init
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_SetChannel2Data
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_SetChannel1Data
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[53]"></a>USART1_Config</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = USART1_Config &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[55]"></a>NVIC_Configuration1</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = NVIC_Configuration1 &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[54]"></a>USART2_Config</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = USART2_Config &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[56]"></a>NVIC_Configuration2</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = NVIC_Configuration2 &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[57]"></a>Timerx_Init</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Timerx_Init &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4b]"></a>fputc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usart.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[2c3]"></a>STM32_FLASH_ReadHalfWord</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Read
</UL>

<P><STRONG><a name="[2c2]"></a>STM32_FLASH_Write_NoCheck</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, stm32_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Write
</UL>

<P><STRONG><a name="[84]"></a>STM32_FLASH_Read</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, stm32_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = STM32_FLASH_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_ReadHalfWord
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Write
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadAllSettingsInFlash
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_pump_max_freq
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_speed_up_factor
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_use_io_target_pressure
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_remote_target_enable
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_entrance_pressure_cali_coeff
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_outlet_pressure_cali_coeff
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_pump_cancel_freq
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_avf_mode
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_use60hz
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_device_address
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_pid_target_delta
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseDataTC
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_pump_temp_setting
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_target_locker
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_company_name
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_err_record
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactoryCheck
</UL>

<P><STRONG><a name="[91]"></a>STM32_FLASH_Write</STRONG> (Thumb, 222 bytes, Stack size 40 bytes, stm32_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Read
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32_FLASH_Write_NoCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveScheduleToFlash
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_error
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFactoryPinToFlash
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WritePinToFlash
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactorySettings
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_kw_melt_down
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveExpireDate
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePhoneNbr
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCompanyName
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePW_ErrIndex
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSettingsToFlash
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePowerSavingData
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_remote_target_default
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_pump_temp_setting
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_avf_mode
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_pump_max_freq
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_pump_cancel_freq
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_speed_up_factor_value
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_target_locker_delta
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_target_locker
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveUseIoTargetPressure
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveRemoteTargetEnable
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCaliCoeffs
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveUse60Hz
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveDeviceAddress
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_error
</UL>

<P><STRONG><a name="[68]"></a>Relay_GPIO_Config</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, relays.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Relay_GPIO_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5c]"></a>RS485_Initialization</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, api_comm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2c6]"></a>ModBusCheckCRC16</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, api_comm.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCRC16
</UL>

<P><STRONG><a name="[2c8]"></a>ModeBusSendChar</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, api_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ModeBusSendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReturnModBusCMD
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCmdBack
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModBusSendDataBlock
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModBusSendData
</UL>

<P><STRONG><a name="[2c9]"></a>ModBusSendData</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, api_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ModBusSendData &rArr; AddCRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModeBusSendChar
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCRC16
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadTargetPressure
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadSmallPump
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadPump3Temp
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadPump2Temp
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadPump1Temp
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadPump
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadOutlet
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadFrequency
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadErrors
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadEntrance
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadDefaultPressure
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiCmd
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadSystemStatus
</UL>

<P><STRONG><a name="[2ca]"></a>ModBusSendDataBlock</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, api_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ModBusSendDataBlock &rArr; AddCRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModeBusSendChar
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCRC16
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCommData
</UL>

<P><STRONG><a name="[151]"></a>ReturnModBusCMD</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, api_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ReturnModBusCMD &rArr; ModeBusSendChar
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModeBusSendChar
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApiCmdExecutor
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiWriteDefaultPressure
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiSetSmallPumpOn
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiSetNonNeagtive
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiSetFactoryValues
</UL>

<P><STRONG><a name="[2cb]"></a>get_frequency</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, api_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = get_frequency &rArr; LoadFrequency &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadFrequency
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadFrequency
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_comm_data2
</UL>

<P><STRONG><a name="[157]"></a>AnswerApiReadOutlet</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, api_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = AnswerApiReadOutlet &rArr; ModBusSendData &rArr; AddCRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModBusSendData
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_cmd
</UL>

<P><STRONG><a name="[158]"></a>AnswerApiReadEntrance</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, api_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = AnswerApiReadEntrance &rArr; ModBusSendData &rArr; AddCRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModBusSendData
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_cmd
</UL>

<P><STRONG><a name="[2cc]"></a>pump_state</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, api_comm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadPump
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_comm_data9
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_comm_data8
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_comm_data7
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_comm_data6
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_comm_data5
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_comm_data4
</UL>

<P><STRONG><a name="[159]"></a>AnswerApiReadPump</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, api_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = AnswerApiReadPump &rArr; ModBusSendData &rArr; AddCRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_state
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModBusSendData
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_cmd
</UL>

<P><STRONG><a name="[15a]"></a>AnswerApiReadTargetPressure</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, api_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = AnswerApiReadTargetPressure &rArr; ModBusSendData &rArr; AddCRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModBusSendData
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_cmd
</UL>

<P><STRONG><a name="[15b]"></a>AnswerApiReadDefaultPressure</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, api_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = AnswerApiReadDefaultPressure &rArr; ModBusSendData &rArr; AddCRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModBusSendData
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_cmd
</UL>

<P><STRONG><a name="[15c]"></a>AnswerApiReadPump1Temp</STRONG> (Thumb, 162 bytes, Stack size 48 bytes, api_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = AnswerApiReadPump1Temp &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModBusSendData
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_cmd
</UL>

<P><STRONG><a name="[15d]"></a>AnswerApiReadPump2Temp</STRONG> (Thumb, 242 bytes, Stack size 32 bytes, api_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = AnswerApiReadPump2Temp &rArr; ModBusSendData &rArr; AddCRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModBusSendData
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_cmd
</UL>

<P><STRONG><a name="[15e]"></a>AnswerApiReadPump3Temp</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, api_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = AnswerApiReadPump3Temp &rArr; ModBusSendData &rArr; AddCRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModBusSendData
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_cmd
</UL>

<P><STRONG><a name="[15f]"></a>AnswerApiReadSmallPump</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, api_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = AnswerApiReadSmallPump &rArr; ModBusSendData &rArr; AddCRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModBusSendData
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_cmd
</UL>

<P><STRONG><a name="[155]"></a>AnswerApiReadFrequency</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, api_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = AnswerApiReadFrequency &rArr; get_frequency &rArr; LoadFrequency &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_frequency
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModBusSendData
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_cmd
</UL>

<P><STRONG><a name="[2cd]"></a>AnswerApiReadSystemStatus</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, api_comm.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModBusSendData
</UL>

<P><STRONG><a name="[156]"></a>AnswerApiReadErrors</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, api_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = AnswerApiReadErrors &rArr; ModBusSendData &rArr; AddCRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompressData
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModBusSendData
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_cmd
</UL>

<P><STRONG><a name="[2d1]"></a>control_relays</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, api_comm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modbus_cmd_processor
</UL>

<P><STRONG><a name="[160]"></a>AnswerApiWriteDefaultPressure</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, api_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = AnswerApiWriteDefaultPressure &rArr; SaveScheduleToFlash &rArr; SaveUseIoTargetPressure &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReturnModBusCMD
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push_cmd_pump
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveScheduleToFlash
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScheduleUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_cmd
</UL>

<P><STRONG><a name="[161]"></a>AnswerApiSetNonNeagtive</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, api_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = AnswerApiSetNonNeagtive &rArr; SaveSettingsToFlash &rArr; save_speed_up_factor &rArr; save_speed_up_factor_value &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReturnModBusCMD
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSettingsToFlash
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_PUMP_GROUPING
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_cmd
</UL>

<P><STRONG><a name="[162]"></a>AnswerApiSetSmallPumpOn</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, api_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = AnswerApiSetSmallPumpOn &rArr; SaveSettingsToFlash &rArr; save_speed_up_factor &rArr; save_speed_up_factor_value &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReturnModBusCMD
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetControlVisiable
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetButtonValue
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSettingsToFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_cmd
</UL>

<P><STRONG><a name="[163]"></a>AnswerApiSetFactoryValues</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, api_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = AnswerApiSetFactoryValues &rArr; FactorySettings &rArr; SaveCompanyName &rArr; STM32_FLASH_Write &rArr; STM32_FLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReturnModBusCMD
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactorySettings
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_cmd
</UL>

<P><STRONG><a name="[2ce]"></a>SendCmdBack</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, api_comm.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModeBusSendChar
</UL>

<P><STRONG><a name="[2cf]"></a>SendCommData</STRONG> (Thumb, 182 bytes, Stack size 16 bytes, api_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = SendCommData &rArr; ModBusSendDataBlock &rArr; AddCRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModBusSendDataBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modbus_cmd_processor
</UL>

<P><STRONG><a name="[2d0]"></a>modbus_cmd_processor</STRONG> (Thumb, 236 bytes, Stack size 8 bytes, api_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = modbus_cmd_processor &rArr; SendCommData &rArr; ModBusSendDataBlock &rArr; AddCRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push_cmd_pump
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCommData
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;control_relays
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModBusReceiver
</UL>

<P><STRONG><a name="[2d2]"></a>AnswerApiCmd</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, api_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = AnswerApiCmd &rArr; ModBusSendData &rArr; AddCRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModBusSendData
</UL>
<BR>[Called By]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModBusReceiver
</UL>

<P><STRONG><a name="[28f]"></a>ModBusReceiver</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, api_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = ModBusReceiver &rArr; modbus_cmd_processor &rArr; SendCommData &rArr; ModBusSendDataBlock &rArr; AddCRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiCmd
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modbus_cmd_processor
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[0]"></a>update_comm_data0</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, api_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = update_comm_data0 &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_comm.o(.data)
</UL>
<P><STRONG><a name="[1]"></a>update_comm_data1</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, api_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = update_comm_data1 &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_comm.o(.data)
</UL>
<P><STRONG><a name="[2]"></a>update_comm_data2</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, api_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = update_comm_data2 &rArr; get_frequency &rArr; LoadFrequency &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_frequency
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_comm.o(.data)
</UL>
<P><STRONG><a name="[3]"></a>update_comm_data3</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, api_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = update_comm_data3 &rArr; CompressData
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompressData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_comm.o(.data)
</UL>
<P><STRONG><a name="[4]"></a>update_comm_data4</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, api_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = update_comm_data4
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_comm.o(.data)
</UL>
<P><STRONG><a name="[5]"></a>update_comm_data5</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, api_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = update_comm_data5
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_comm.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>update_comm_data6</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, api_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = update_comm_data6
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_comm.o(.data)
</UL>
<P><STRONG><a name="[7]"></a>update_comm_data7</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, api_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = update_comm_data7
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_comm.o(.data)
</UL>
<P><STRONG><a name="[8]"></a>update_comm_data8</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, api_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = update_comm_data8
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_comm.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>update_comm_data9</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, api_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = update_comm_data9
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_comm.o(.data)
</UL>
<P><STRONG><a name="[a]"></a>update_comm_data10</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, api_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = update_comm_data10 &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_comm.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>update_comm_data11</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, api_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = update_comm_data11 &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_comm.o(.data)
</UL>
<P><STRONG><a name="[c]"></a>update_comm_data12</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, api_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = update_comm_data12 &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_comm.o(.data)
</UL>
<P><STRONG><a name="[2d3]"></a>update_comm_pump_temp</STRONG> (Thumb, 318 bytes, Stack size 40 bytes, api_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = update_comm_pump_temp &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_comm_data13
</UL>

<P><STRONG><a name="[d]"></a>update_comm_data13</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, api_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = update_comm_data13 &rArr; update_comm_pump_temp &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_comm_pump_temp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_comm.o(.data)
</UL>
<P><STRONG><a name="[e]"></a>update_comm_data14</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, api_comm.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> api_comm.o(.data)
</UL>
<P><STRONG><a name="[82]"></a>UpdateCommData</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, api_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UpdateCommData
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d2]"></a>strcat</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, strcat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;valid_chk
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePhoneNbr
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCompanyName
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RealtimeMeasurement
</UL>

<P><STRONG><a name="[85]"></a>strlen</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyText
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePhoneNbr
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCompanyName
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_phone_nbr
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_company_name
</UL>

<P><STRONG><a name="[117]"></a>strcmp</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equality_chk
</UL>

<P><STRONG><a name="[87]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyText
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinMonitor
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;valid_chk
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePhoneNbr
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCompanyName
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_phone_nbr
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_company_name
</UL>

<P><STRONG><a name="[86]"></a>__0sscanf</STRONG> (Thumb, 48 bytes, Stack size 72 bytes, __0sscanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyText
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pw_str2arr
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_phone_nbr
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_company_name
</UL>

<P><STRONG><a name="[2d5]"></a>_scanf_int</STRONG> (Thumb, 334 bytes, Stack size 56 bytes, _scanf_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[2e7]"></a>_scanf_string</STRONG> (Thumb, 216 bytes, Stack size 56 bytes, _scanf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _scanf_string
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[2e6]"></a>_scanf_real</STRONG> (Thumb, 0 bytes, Stack size 104 bytes, scanf_fp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _scanf_real
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[2d9]"></a>_scanf_really_real</STRONG> (Thumb, 566 bytes, Stack size 104 bytes, scanf_fp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[104]"></a>__aeabi_fadd</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PressureInTargetRange
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_quantity_from_volt
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RealtimeMeasurement
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_calc_core
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_FC
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateDac
</UL>

<P><STRONG><a name="[102]"></a>__aeabi_fsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PressureInTargetRange
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_quantity_from_volt
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_calc_core
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gap
</UL>

<P><STRONG><a name="[ac]"></a>__aeabi_frsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_pump_temp_setting
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_calc_core
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gap
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;in_target_zone
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WakeUpPressureAlert
</UL>

<P><STRONG><a name="[99]"></a>__aeabi_fmul</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIDParament_Init
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyText
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_quantity_from_volt
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveScheduleToFlash
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSettingsToFlash
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_pump_temp_setting
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_pump_temp_setting
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_pump_max_freq
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_speed_up_factor_value
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_target_locker_delta
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RealtimeMeasurement
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadTargetPressure
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadSmallPump
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadPump3Temp
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadPump2Temp
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadPump1Temp
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadOutlet
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadEntrance
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadDefaultPressure
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_calc_core
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WakeUpPressureAlert
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_comm_pump_temp
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_comm_data12
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_comm_data11
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_comm_data10
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_comm_data1
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_comm_data0
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_frequency
</UL>

<P><STRONG><a name="[103]"></a>__aeabi_fdiv</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_quantity_from_volt
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RealtimeMeasurement
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_calc_core
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select_algo
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentFrequency
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_FC
</UL>

<P><STRONG><a name="[a4]"></a>__aeabi_dadd</STRONG> (Thumb, 318 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdatePumpFreq
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpMileageMonitor
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyText
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_pump_temp_setting
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadPump1Temp
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_calc_core
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_comm_pump_temp
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[189]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpMileageMonitor
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FC_Retreator
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_calc_core
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[b3]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;variables_update
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[dc]"></a>__aeabi_dmul</STRONG> (Thumb, 226 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdatePumpFreq
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIDParament_Init
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Manual_FC
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyText
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PidSetTargetPressure
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_pid_target_delta
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RealtimeMeasurement
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FC_Retreator
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_calc_core
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_step_up_length
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_FC
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateDac
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[a3]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdatePumpFreq
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Manual_FC
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;range_factor
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_pump_max_freq
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_speed_up_factor
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_entrance_pressure_cali_coeff
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_outlet_pressure_cali_coeff
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseDataTC
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseSettingsInFlash
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_PID_SETTING
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_VALVE_CONTROL1
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_VALVE_CONTROL
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_SLEEP_SETTING
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_PUMP_SWITCH_CONDTION
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_ENTRANCE_SENSOR2
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;variables_update
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_pump_temp_setting
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RealtimeMeasurement
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decompression_monitor
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entrance_pressure_restore_from_low_dual
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entrance_pressure_low_dual
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiWriteDefaultPressure
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_step_up_length
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_frequency_for_pump
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_pid_factors
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_FC
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateDac
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_cmd
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadFrequency
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[b2]"></a>__aeabi_i2f</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIDParament_Init
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyText
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_quantity_from_volt
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;variables_update
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RealtimeMeasurement
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FC_Retreator
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;water_entrance_monitor
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_canceling_monitor
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_adding_monitor
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cancel_a_pump
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_calc_core
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;empty_fc_bucket
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_FC_StartValue
</UL>

<P><STRONG><a name="[ab]"></a>__aeabi_ui2f</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_mod_1_2
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyText
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_pump_max_freq
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_pump_temp_setting
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FatigueCancelMonitorAvf
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;water_level_event
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wake_up_watchdog
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;full_wake_up
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wake_up_from_half_server
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;in_target_zone
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_pid_factors
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WakeUpPressureAlert
</UL>

<P><STRONG><a name="[a8]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyText
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;range_factor
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_pump_max_freq
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseDataTC
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseSettingsInFlash
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_ENTRANCE_SENSOR2
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;variables_update
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_pump_temp_setting
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiWriteDefaultPressure
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_step_up_length
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[a2]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdatePumpFreq
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Manual_FC
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_speed_up_factor
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_entrance_pressure_cali_coeff
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_outlet_pressure_cali_coeff
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_pid_target_delta
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_PID_SETTING
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_VALVE_CONTROL1
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_VALVE_CONTROL
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_SLEEP_SETTING
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_PUMP_SWITCH_CONDTION
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_ENTRANCE_SENSOR2
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;variables_update
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_pump_temp_setting
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RealtimeMeasurement
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decompression_monitor
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entrance_pressure_restore_from_low_dual
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entrance_pressure_low_dual
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_step_up_length
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_pid_factors
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_FC
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateDac
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_cmd
</UL>

<P><STRONG><a name="[9a]"></a>__aeabi_f2iz</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ffixi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIDParament_Init
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyText
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data2string
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wl_para_picker
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pressure_para_picker
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temp_para_picker
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveScheduleToFlash
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSettingsToFlash
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_pump_temp_setting
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_pump_max_freq
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_speed_up_factor_value
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_target_locker_delta
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RealtimeMeasurement
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadTargetPressure
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadSmallPump
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadPump3Temp
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadPump2Temp
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadOutlet
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadEntrance
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadDefaultPressure
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentFrequency
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_comm_data12
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_comm_data11
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_comm_data10
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_comm_data1
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_comm_data0
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_frequency
</UL>

<P><STRONG><a name="[12f]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdatePumpFreq
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Manual_FC
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyText
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadPump1Temp
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_FC
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateDac
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_comm_pump_temp
</UL>

<P><STRONG><a name="[a6]"></a>__aeabi_f2d</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdatePumpFreq
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpMileageMonitor
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIDParament_Init
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Manual_FC
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyText
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data2string
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;range_factor
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PidSetTargetPressure
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTargetPressure
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadAllSettingsInFlash
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_pump_max_freq
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_speed_up_factor
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_entrance_pressure_cali_coeff
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_outlet_pressure_cali_coeff
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseDataTC
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSettingsToFlash
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseSettingsInFlash
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_PID_SETTING
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_VALVE_CONTROL1
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_VALVE_CONTROL
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_POWER_UP_SETTING
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_SLEEP_SETTING
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_PUMP_SWITCH_CONDTION
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_ENTRANCE_SENSOR2
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_ENTRANCE_SENSOR
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_OUTLET_SENSOR
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;variables_update
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_pump_temp_setting
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_pump_temp_setting
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RealtimeMeasurement
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FatigueCancelMonitorAvf
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FC_Retreator
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entrance_pressure_low_dual
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entrance_pressure_restore_from_low
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadPump1Temp
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_calc_core
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select_algo
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_frequency_for_pump
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_FC
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateDac
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_cmd
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadFrequency
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_comm_pump_temp
</UL>

<P><STRONG><a name="[188]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_calc_core
</UL>

<P><STRONG><a name="[a7]"></a>__aeabi_cdcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_pump_temp_setting
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select_algo
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_frequency_for_pump
</UL>

<P><STRONG><a name="[a9]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpMileageMonitor
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_pump_temp_setting
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[a5]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpMileageMonitor
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIDParament_Init
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;range_factor
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PidSetTargetPressure
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_pump_max_freq
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_speed_up_factor
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_entrance_pressure_cali_coeff
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_outlet_pressure_cali_coeff
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_pid_target_delta
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseDataTC
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseSettingsInFlash
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_PID_SETTING
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_VALVE_CONTROL1
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_VALVE_CONTROL
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_SLEEP_SETTING
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_PUMP_SWITCH_CONDTION
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_ENTRANCE_SENSOR2
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;variables_update
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_pump_temp_setting
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RealtimeMeasurement
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FC_Retreator
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decompression_monitor
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entrance_pressure_restore_from_low_dual
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entrance_pressure_low_dual
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiWriteDefaultPressure
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_calc_core
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_step_up_length
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_pid_factors
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_cmd
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadFrequency
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[72]"></a>__aeabi_cfcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cfcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ad]"></a>__aeabi_cfcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_mod_1_2
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyText
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PressureInTargetRange
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_pump_max_freq
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSettingsToFlash
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_pump_temp_setting
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RealtimeMeasurement
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FC_Retreator
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decompression_monitor
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;water_entrance_monitor
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entrance_pressure_restore_from_low_dual
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entrance_pressure_low
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;water_level_event
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;outlet_pressure_restore_from_high
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;outlet_pressure_low
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wake_up_watchdog
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadSmallPump
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadPump3Temp
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadPump2Temp
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnswerApiReadPump1Temp
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_canceling_monitor
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_adding_monitor
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindLeastUsedPump
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_calc_core
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_step_up_length
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;in_target_zone
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WakeUpPressureAlert
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_FC
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateDac
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_comm_pump_temp
</UL>

<P><STRONG><a name="[d9]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PressureInTargetRange
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseDataTC
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RealtimeMeasurement
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FC_Retreator
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;over_heat_error
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;manual_screen_monitor
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump6_error
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump5_error
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump4_error
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump3_error
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump2_error
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decompression_monitor
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;water_entrance_monitor
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entrance_pressure_low_dual
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entrance_pressure_restore_from_low
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;water_level_event
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;outlet_pressure_high
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;outlet_pressure_low
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fc_full_empty_radar
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_canceling_monitor
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_calc_core
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gap
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepPressureConfirmed
</UL>

<P><STRONG><a name="[3a4]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[2f2]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[2e1]"></a>__aeabi_uldivmod</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[2dc]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[3a5]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[2e0]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[3a6]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[2dd]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[3a7]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[2d6]"></a>_chval</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
</UL>

<P><STRONG><a name="[2d4]"></a>__vfscanf_char</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>

<P><STRONG><a name="[47]"></a>_sgetc</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __0sscanf.o(.text)
</UL>
<P><STRONG><a name="[48]"></a>_sbackspace</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __0sscanf.o(.text)
</UL>
<P><STRONG><a name="[3a8]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[2db]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[2da]"></a>_float_epilogue</STRONG> (Thumb, 94 bytes, Stack size 4 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>

<P><STRONG><a name="[2df]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[2de]"></a>_double_epilogue</STRONG> (Thumb, 168 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2d
</UL>

<P><STRONG><a name="[2f5]"></a>__ARM_scalbn</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, dscalb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[2ee]"></a>scalbn</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dscalb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
</UL>

<P><STRONG><a name="[2d8]"></a>__aeabi_ul2d</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dfltul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[2e3]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[4e]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[3a9]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[4a]"></a>isspace</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, isspace_c.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ctype_lookup
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL>
<P><STRONG><a name="[2e2]"></a>__vfscanf</STRONG> (Thumb, 818 bytes, Stack size 88 bytes, _scanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_real
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_string
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
</UL>
<BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>

<P><STRONG><a name="[2e8]"></a>_dsqrt</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, dsqrt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[2e5]"></a>__ctype_lookup</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, ctype_c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isspace
</UL>

<P><STRONG><a name="[3aa]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dclz77c.o(.text), UNUSED)

<P><STRONG><a name="[3ab]"></a>__decompress2</STRONG> (Thumb, 96 bytes, Stack size unknown bytes, __dclz77c.o(.text), UNUSED)

<P><STRONG><a name="[2e9]"></a>__0printf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[3ac]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[5f]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_mod_1_2
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpMileageMonitor
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyWriteFlash
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyReadRTC
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyText
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifySelector
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonUsabilityManager
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetButtonUsability
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_int
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinMonitor
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;target_locker_manager
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_window_expired
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_an_err_record
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Stopper
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExpireDateManager
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseBKG_SettingsInFlash
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadAllSettingsInFlash
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_pump_max_freq
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_speed_up_factor
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_use_io_target_pressure
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_remote_target_enable
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_entrance_pressure_cali_coeff
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_outlet_pressure_cali_coeff
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_pump_cancel_freq
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_avf_mode
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_use60hz
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePhoneNbr
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCompanyName
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSettingsToFlash
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_ENTRANCE_SENSOR0
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_OUTLET_SENSOR
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_PUMP_GROUPING
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;variables_update
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_pump_temp_setting
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_pump_temp_setting
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_target_locker
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_target_locker_delta
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadPowerSavingData
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_phone_nbr
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_company_name
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_err_record
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshErrorInfo
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pump_Manager
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerUpAutoRunManager
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FatigePumpSwitcher
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactoryCheck
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_monitor
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;general_recorder
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remote_start_stop
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump6_error
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump5_error
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump3_error
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_error
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bomb_checker
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entrance_pressure_low_dual
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entrance_pressure_restore_from_low
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entrance_pressure_low
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaterLevelMonitor
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;outlet_pressure_restore_from_high
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;outlet_pressure_high
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wake_up_watchdog
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_focused_ind_for_wake_up
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseSparePump
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_fatige_switching
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_fatige_switching_avf
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_manager
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;end_of_stopper_watchdog
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fc_manager
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fc_full_empty_radar
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_canceling_monitor
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_pump_canceling
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_adding_monitor
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFocus
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;use_new_pump
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cancel_a_pump
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_the_pump_to_be_canceled_avf_mode
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_the_pump_to_be_canceled
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_calc_core
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;use_new_bucket
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_new_bucket
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FatigeSwitchManager
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddPumpSwitchManager
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modbus_cmd_processor
</UL>

<P><STRONG><a name="[3ad]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[3ae]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[2eb]"></a>__0sprintf</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[3af]"></a>__1sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[8b]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyTouchXY
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyButton
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyText
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshDateControls
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCurrentPassWord
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debugger_clean
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data2string
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PidSetTargetPressure
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTargetPressure
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_an_err_record
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExpireDateManager
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadAllSettingsInFlash
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseDataTC
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UseSettingsInFlash
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_PID_SETTING
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_VALVE_CONTROL1
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_VALVE_CONTROL
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_POWER_UP_SETTING
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_SLEEP_SETTING
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_PUMP_SWITCH_CONDTION
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_ENTRANCE_SENSOR2
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_ENTRANCE_SENSOR0
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_ENTRANCE_SENSOR
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_OUTLET_SENSOR
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_PUMP_GROUPING
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controls_update_SCREEN_SCREEN_SETTING
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_pump_temp_setting
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_expire_date
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debugger
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshErrorInfo
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FatigueCancelMonitorAvf
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_monitor
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;general_recorder
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pump_error_recorder
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_frequency_for_pump
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_cmd
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendStringsWithSplitter
</UL>

<P><STRONG><a name="[3b0]"></a>__c89sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[3b1]"></a>sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[2f6]"></a>__ARM_fpclassify</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[2ec]"></a>__kernel_poly</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[2ed]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __mathlib_dbl_underflow &rArr; scalbn
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[3b2]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[3b3]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[3b4]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[2f3]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[12e]"></a>pow</STRONG> (Thumb, 2510 bytes, Stack size 112 bytes, pow.o(i.pow))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scalbn
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyText
</UL>

<P><STRONG><a name="[2f4]"></a>sqrt</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sqrt &rArr; _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[211]"></a>TI4_Config</STRONG> (Thumb, 118 bytes, Stack size 20 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[20f]"></a>TI3_Config</STRONG> (Thumb, 114 bytes, Stack size 20 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[20d]"></a>TI2_Config</STRONG> (Thumb, 118 bytes, Stack size 20 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[20b]"></a>TI1_Config</STRONG> (Thumb, 106 bytes, Stack size 20 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[21e]"></a>SetSysClockTo72</STRONG> (Thumb, 192 bytes, Stack size 0 bytes, system_stm32f10x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[21d]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_stm32f10x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[21f]"></a>queue_pop</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cmd_queue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_find_cmd
</UL>

<P><STRONG><a name="[220]"></a>queue_size</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, cmd_queue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_find_cmd
</UL>

<P><STRONG><a name="[2c7]"></a>AddCRC16</STRONG> (Thumb, 72 bytes, Stack size 20 bytes, api_comm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = AddCRC16
</UL>
<BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModBusSendDataBlock
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModBusSendData
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModBusCheckCRC16
</UL>

<P><STRONG><a name="[2ef]"></a>_fp_digits</STRONG> (Thumb, 318 bytes, Stack size 56 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[2ea]"></a>_printf_core</STRONG> (Thumb, 1734 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[2f1]"></a>_printf_post_padding</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[2f0]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[4c]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0sprintf)
</UL>
<P><STRONG><a name="[2d7]"></a>_fp_value</STRONG> (Thumb, 272 bytes, Stack size 56 bytes, scanf_fp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2d
</UL>
<BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[49]"></a>_scanf_char_input</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
